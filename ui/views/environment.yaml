# MAXIMALIST DASHBOARD
# Environment View
# Made by Madelena Mak 2022

title: Environment
path: climate

type: 'custom:grid-layout'
layout: !include ../shared/snippets/layout-page-margin.yaml

cards:
  - type: 'custom:layout-card'
    layout_type: 'custom:grid-layout'
    view_layout:
      grid-area: cc
    layout:
      grid-column-gap: 32px
      grid-template-columns: 'repeat(auto-fit, [col-start] minmax(400px, 1fr) [col-end])'
      grid-template-rows: auto
      margin: -1px
    mediaquery:
      '(max-width: 480px)':
        grid-template-columns: 1fr

    cards:

      # [Header] Summary
      - type: 'custom:layout-card'
        layout_type: 'custom:grid-layout'
        layout: !include ../shared/snippets/layout-page-title.yaml
        view_layout:
          grid-column: 1/-1
        cards:

          - type: markdown
            content: >
              # Environment

              It is {{ states('sensor.thermal_comfort_indoor_average_simmerzone') | regex_replace(find='_', replace=' ') | lower }} 
              and {{ states('sensor.thermal_comfort_indoor_average_perception') | regex_replace(find='_', replace=' ') | lower }} at 
              {{states('sensor.indoor_average_temperature')}}°C
              inside. It is {{ states('sensor.thermal_comfort_outside_simmerzone') | regex_replace(find='_', replace=' ') | lower }} 
              and {{ states('sensor.thermal_comfort_outside_perception') | regex_replace(find='_', replace=' ') | lower }} at {{
              states('sensor.valhalla_apparent_temperature') }}°C and is
              getting {{ iif
              (states('sensor.valhalla_hourly_forecast_temperature_rising')
              == 'Falling', 'colder', 'warmer') }} and {{ iif
              (states('sensor.valhalla_hourly_forecast_wind_speed_increasing')
              == 'Increasing', 'more windy', 'less windy') }} outside.

              {%- set is_window_open =
              is_state('binary_sensor.bedroom_window_sensor_center_ias_zone',
              'on') or
              is_state('binary_sensor.living_room_window_sensor_right_ias_zone',
              'on') or
              is_state('binary_sensor.living_room_window_sensor_center_ias_zone',
              'on') -%} {{ iif( is_window_open and
              states('sensor.valhalla_apparent_temperature')|int < 15, ' You
              should close your windows.', '') }}
            style:
              .: |
                ha-card {
                  background: none;
                }
              ha-markdown$: |
                h1 {
                  font-size: var(--title-font-size);
                  font-weight: 600;
                  line-height: 1.1;
                  margin-left: -2px;
                  margin-block-end: -8px;
                }

          - type: 'custom:layout-card'
            layout_type: 'custom:grid-layout'
            layout:
              margin: 0
            view_layout:
              place-self: center auto
            cards:

              - type: 'custom:swipe-card'
                parameters: !include ../shared/snippets/parameters-page-title-swipe-card.yaml
                style: !include ../shared/snippets/style-page-title-swipe-card.yaml
                cards:

                  - type: custom:state-switch
                    entity: mediaquery
                    states:
                      "(max-width: 799.99px), (min-width: 1024px)": &title-badge-1
                        type: 'custom:mushroom-fan-card'
                        entity: fan.living_room_air_purifier_ikea_fan
                        icon_animation: true
                        name: Living Room Air Purifier
                        icon_color: pink
                        style: !include ../shared/snippets/style-page-title-swipe-card-tile.yaml
                        hold_action:
                          action: more-info
                      "(min-width: 800px) and (max-width: 1023.99px)":
                        <<: *title-badge-1
                        layout: vertical

                  - type: custom:state-switch
                    entity: mediaquery
                    states:
                      "(max-width: 799.99px), (min-width: 1024px)": &title-badge-2
                        type: 'custom:mushroom-fan-card'
                        entity: fan.pure_hot_cool_link
                        icon_animation: true
                        name: Bedroom Dyson
                        icon_color: pink
                        style: !include ../shared/snippets/style-page-title-swipe-card-tile.yaml
                        hold_action:
                          action: more-info
                      "(min-width: 800px) and (max-width: 1023.99px)":
                        <<: *title-badge-2
                        layout: vertical

                  - type: custom:state-switch
                    entity: mediaquery
                    states:
                      "(max-width: 799.99px), (min-width: 1024px)": &title-badge-4
                        type: 'custom:mushroom-fan-card'
                        entity: fan.workspace_air_purifier
                        icon_animation: true
                        name: Workspace Air Purifier
                        icon_color: pink
                        style: !include ../shared/snippets/style-page-title-swipe-card-tile.yaml
                        hold_action:
                          action: more-info
                      "(min-width: 800px) and (max-width: 1023.99px)":
                        <<: *title-badge-4
                        layout: vertical

                  - type: custom:state-switch
                    entity: mediaquery
                    states:
                      "(max-width: 799.99px), (min-width: 1024px)": &title-badge-3
                        type: 'custom:mushroom-entity-card'
                        entity: switch.bedroom_humidifier
                        icon_animation: true
                        name: Bedroom Humidifier
                        icon_color: pink
                        style: !include ../shared/snippets/style-page-title-swipe-card-tile.yaml
                        hold_action:
                          action: more-info
                      "(min-width: 800px) and (max-width: 1023.99px)":
                        <<: *title-badge-3
                        layout: vertical


      # [Row] Controls
      # - type: 'custom:layout-card'
      #   layout_type: 'custom:grid-layout'
      #   layout:
      #     margin: 0
      #     grid-template-columns: 'repeat(auto-fit, [col-start] minmax(348px, 1fr) [col-end])'
      #   cards:
      #     - type: 'custom:button-card'
      #       template: header_card_no_link
      #       variables:
      #         name: CONTROLS
      #       view_layout:
      #         grid-column: 1/-1
      #     - type: vertical-stack
      #       in_card: true
      #       cards:
      #         - type: 'custom:mushroom-fan-card'
      #           entity: fan.pure_hot_cool_link
      #           icon_animation: true
      #           show_oscillate_control: true
      #           show_percentage_control: true
      #           hold_action:
      #             action: more-info
      #           icon: ''
      #     - type: vertical-stack
      #       in_card: true
      #       cards:
      #         - type: 'custom:mushroom-entity-card'
      #           entity: switch.bedroom_humidifier
      #           tap_action:
      #             action: toggle
      #           hold_action:
      #             action: more-info
      #     - type: vertical-stack
      #       in_card: true
      #       cards:
      #         - type: 'custom:mini-climate'
      #           entity: climate.pure_hot_cool_link
      #           temperature:
      #             unit: °C
      #             round: 1
      #   view_layout:
      #     grid-column: 1/-1


      # [Column] Comfort
      - type: vertical-stack
        cards:

          - type: 'custom:button-card'
            template: header_card_no_link
            variables:
              name: COMFORT
            view_layout:
              grid-column-start: 1
              grid-column-end: -1

          - type: vertical-stack
            in_card: true
            cards:

              - type: vertical-stack
                cards:

                  - type: horizontal-stack
                    cards:
                      - type: entity
                        entity: sensor.valhalla_apparent_temperature
                        name: Dry Bulb
                        icon: none
                      - type: entity
                        entity: sensor.valhalla_wet_bulb_temperature
                        name: Wet Bulb
                        icon: none
                      - type: entity
                        entity: sensor.valhalla_dew_point
                        name: Dew Point
                        icon: none
                      - type: custom:gap-card

                  - type: entity
                    entity: sensor.accuweather_air_pressure
                    name: Air Pressure
                    icon: none

                  - type: entity
                    entity: sensor.thermal_comfort_outside_absolutehumidity
                    name: Absolute Humidity
                    icon: none

              - type: 'custom:floorplan-card'
                config:
                  image:
                    location: /local/psychrometry-chart.svg
                    cache: false
                  stylesheet: /local/psychrometry-chart.css
                  defaults:
                    hover_action: hover-info
                    tap_action: more-info
                  rules:
                    - entity: sensor.netatmo_strawberry_land_indoor_temperature
                      state_action:
                        action: call-service
                        service: floorplan.style_set
                        service_data:
                          element: indicator-bedroom
                          style: |
                            >
                            var x = (parseFloat(entity.state) + 20) / 65 * 1007 - 237;
                            var y = 665 - (parseFloat(states['sensor.thermal_comfort_netatmo_bedroom_absolutehumidity'].state) / 35 * 665) - 155; 
                            return `transform: translate(${x}px, ${y}px);`;

                    - entity: sensor.bathroom_env_sensor_temperature
                      state_action:
                        action: call-service
                        service: floorplan.style_set
                        service_data:
                          element: indicator-bathroom
                          style: |
                            >
                            var x = (parseFloat(entity.state) + 20) / 65 * 1007 - 11;
                            var y = 665 - (parseFloat(states['sensor.thermal_comfort_bathroom_absolutehumidity'].state) / 35 * 665) - 155; 
                            return `transform: translate(${x}px, ${y}px);`;

                    - entity: sensor.living_room_env_sensor_temperature
                      state_action:
                        action: call-service
                        service: floorplan.style_set
                        service_data:
                          element: indicator-livingroom
                          style: |
                            >
                            var x = (parseFloat(entity.state) + 20) / 65 * 1007 - 11;
                            var y = 665 - (parseFloat(states['sensor.thermal_comfort_living_room_absolutehumidity'].state) / 35 * 665) - 10; 
                            return `transform: translate(${x}px, ${y}px);`;

                    - entity: sensor.workspace_env_sensor_temperature
                      state_action:
                        action: call-service
                        service: floorplan.style_set
                        service_data:
                          element: indicator-workspace
                          style: |
                            >
                            var x = (parseFloat(entity.state) + 20) / 65 * 1007 - 256;
                            var y = 665 - (parseFloat(states['sensor.thermal_comfort_workspace_absolutehumidity'].state) / 35 * 665) - 10; 
                            return `transform: translate(${x}px, ${y}px);`;

                    - entity: sensor.valhalla_apparent_temperature
                      state_action:
                        action: call-service
                        service: floorplan.style_set
                        service_data:
                          element: indicator-outdoor
                          style: |
                            >
                            var x = (parseFloat(entity.state) + 20) / 65 * 1007 - 229;
                            var y = 665 - (parseFloat(states['sensor.thermal_comfort_outside_absolutehumidity'].state) / 35 * 665) - 155; 
                            return `transform: translate(${x}px, ${y}px);`;

                    - entity: sensor.indoor_average_temperature
                      state_action:
                        action: call-service
                        service: floorplan.style_set
                        service_data:
                          element: indicator-indoor
                          style: |
                            >
                            var x = (parseFloat(entity.state) + 20) / 65 * 1007 - 343;
                            var y = 665 - (parseFloat(states['sensor.thermal_comfort_indoor_average_absolutehumidity'].state) / 35 * 665) - 241; 
                            return `transform: translate(${x}px, ${y}px);`;
                card_mod:
                  style: |
                    ha-card {margin-top: -240px; }

          - type: markdown
            content: |-
              <table width="100%">
                <tr>
                  <th>Area</th>
                  <th>Temperature</th>
                  <th>Humidity</th>
                </tr>
                <tr>
                  <td>Outdoor</td>
                  <td>{{ states('sensor.thermal_comfort_outside_simmerzone') | regex_replace(find='_', replace=' ') | title }}</td>
                  <td>{{ states('sensor.thermal_comfort_outside_perception') | regex_replace(find='_', replace=' ') | title }}</td>
                </tr>
                <tr>
                  <td>Indoor Average</td>
                  <td>{{ states('sensor.thermal_comfort_indoor_average_simmerzone') | regex_replace(find='_', replace=' ') | title }}</td>
                  <td>{{ states('sensor.thermal_comfort_indoor_average_perception') | regex_replace(find='_', replace=' ') | title }}</td>
                </tr>
                <tr>
                  <td>Bedroom</td>
                  <td>{{ states('sensor.thermal_comfort_netatmo_bedroom_simmerzone') | regex_replace(find='_', replace=' ') | title }}</td>
                  <td>{{ states('sensor.thermal_comfort_netatmo_bedroom_perception') | regex_replace(find='_', replace=' ') | title }}</td>
                </tr>
                <tr>
                  <td>Workspace</td>
                  <td>{{ states('sensor.thermal_comfort_workspace_simmerzone') | regex_replace(find='_', replace=' ') | title }}</td>
                  <td>{{ states('sensor.thermal_comfort_workspace_perception') | regex_replace(find='_', replace=' ') | title }}</td>
                </tr>
                <tr>
                  <td>Living Room</td>
                  <td>{{ states('sensor.thermal_comfort_living_room_simmerzone') | regex_replace(find='_', replace=' ') | title }}</td>
                  <td>{{ states('sensor.thermal_comfort_living_room_perception') | regex_replace(find='_', replace=' ') | title }}</td>
                </tr>
                <tr>
                  <td>Bathroom</td>
                  <td>{{ states('sensor.thermal_comfort_bathroom_simmerzone') | regex_replace(find='_', replace=' ') | title }}</td>
                  <td>{{ states('sensor.thermal_comfort_bathroom_perception') | regex_replace(find='_', replace=' ') | title }}</td>
                </tr>
              </table>
            card_mod:
              style:
                ha-markdown$: |
                  th, td { padding: 4px 0 8px; border-bottom: 1px solid rgba(var(--rgb-primary-text-color),.05); }
                  th { font-size: var(--h6-font-size); text-align: left; text-transform: uppercase; padding-top: 0 !important; }
                  th, td:first-child { color: rgba(var(--rgb-primary-text-color), .5); }
                  xth, xtr:last-child td { border-bottom: 1px solid rgba(var(--rgb-primary-text-color),.5) !important; }


      # [Column] Temperature
      - type: vertical-stack
        cards:

          - type: 'custom:button-card'
            template: header_card_no_link
            variables:
              name: TEMPERATURE
            view_layout:
              grid-column-start: 1
              grid-column-end: -1

          - type: vertical-stack
            in_card: true
            cards:

              - type: horizontal-stack
                cards:

                  - type: entity
                    entity: >-
                      sensor.valhalla_apparent_temperature
                    name: Outdoor
                    icon: none

                  - type: entity
                    entity: sensor.indoor_average_temperature
                    name: Indoor Average
                    icon: none

                  - type: 'custom:card-templater'
                    card:
                      type: entity
                      entity: sensor.indoor_outdoor_temperature_difference
                      name_template: >
                        {{ state_attr('sensor.indoor_outdoor_temperature_difference', 'description') | capitalize }} by
                      card_mod:
                        style: |
                          ha-card {background: none;}
                    entities:
                      - sensor.indoor_outdoor_temperature_difference

                  # - type: entities
                  #   entities:
                  #     - entity: sensor.workspace_room_hue_sensor_temperature
                  #       name: ' '
                  #     - entity: sensor.bathroom_env_sensor_temperature
                  #       name: ' '

              - type: custom:apexcharts-card
                config_templates:
                  - environment_chart
                  - sun_elevation
                apex_config:
                  dataLabels:
                    formatter: |
                      EVAL:function(value, { seriesIndex, dataPointIndex, w }) {
                        if (dataPointIndex == w.config.series[seriesIndex].data.length - 2) {
                          return Math.round( value * 10 ) / 10 + "°C - " + w.config.series[seriesIndex].name  // + " " + dataPointIndex + " " + w.config.series[seriesIndex].data.length
                        } else { return '' }
                      }
                series:

                  - entity: sensor.sun_elevation
                    color: var(--primary-text-color)
                    opacity: .2
                    stroke_width: 2
                    yaxis_id: sun
                    unit: °
                    show:
                      legend_value: false

                  # Just to draw a flat line at 0 elevation.
                  - entity: sensor.sun_elevation
                    color: var(--primary-text-color)
                    opacity: .2
                    stroke_width: 1
                    yaxis_id: sun
                    unit: °
                    data_generator: |
                      const now = new Date();
                      const data = [[now.getTime() - 172800000, 0], [now.getTime(), 0], [now.getTime() + 86400000, 0]];
                      return data;

                  - entity: sensor.valhalla_apparent_temperature
                    type: area
                    name: Accuweather
                    yaxis_id: main
                    stroke_width: .5
                    color: gray
                    opacity: .1
                    show:
                      datalabels: true
                      extremas: true

                  - entity: sensor.netatmo_strawberry_land_indoor_outdoor_temperature
                    name: West Facade Netatmo
                    stroke_width: .5
                    color: gray
                    yaxis_id: main
                    group_by:
                      func: first
                      duration: 30min
                    show:
                      datalabels: true

                  - entity: sensor.storage_environment_sensor_temperature
                    name: Storage
                    stroke_width: 1
                    color: brown
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.bathroom_env_sensor_temperature
                    name: Bathroom
                    stroke_width: 1
                    color: turquoise
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.kitchen_stove_monitor_temperature
                    name: Kitchen Stove
                    stroke_width: 1
                    color: purple
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.kitchen_counter_air_quality_sensor_temperature
                    name: Kitchen
                    stroke_width: 1
                    color: purple
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  # - entity: sensor.kitchen_counter_motion_sensor_temperature
                  #   name: Kitchen Hue
                  #   stroke_width: 1
                  #   color: purple
                  #   yaxis_id: main
                  #   show:
                  #     datalabels: true
                  #   group_by:
                  #     func: first
                  #     duration: 30min

                  - entity: sensor.workspace_env_sensor_temperature
                    name: Workspace
                    stroke_width: 1
                    yaxis_id: main
                    color: orange
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  # - entity: sensor.living_room_air_purifier_temperature
                  #   name: Living Room Awair
                  #   stroke_width: 1
                  #   color: green
                  #   yaxis_id: main
                  #   show:
                  #     datalabels: true
                  #   group_by:
                  #     func: first
                  #     duration: 30min

                  - entity: sensor.living_room_env_sensor_temperature
                    name: Living Room
                    stroke_width: 1
                    color: green
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  # - entity: sensor.living_room_hue_sensor_temperature
                  #   name: Living Room Hue
                  #   stroke_width: 1
                  #   color: green
                  #   yaxis_id: main
                  #   show:
                  #     datalabels: true
                  #   group_by:
                  #     func: first
                  #     duration: 30min

                  - entity: sensor.bedroom_hue_sensor_temperature
                    name: Bedroom Hue
                    stroke_width: 1
                    yaxis_id: main
                    color: hotpink
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.netatmo_strawberry_land_indoor_temperature
                    name: Bedroom Netatmo
                    stroke_width: 1
                    yaxis_id: main
                    color: hotpink
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.indoor_temperature_legal_limit
                    name: Legal Limit
                    color: var(--primary-text-color)
                    yaxis_id: main
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.indoor_comfort_zone_temperature_minimum
                    name: Comfort Zone Minimum
                    color: var(--primary-text-color)
                    stroke_width: .25
                    yaxis_id: main
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.indoor_comfort_zone_temperature_maximum
                    name: Comfort Zone Maximum
                    color: var(--primary-text-color)
                    stroke_width: .25
                    yaxis_id: main
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.indoor_average_temperature
                    name: Indoor Avg
                    yaxis_id: main
                    color: 'var(--primary-color)'
                    show:
                      datalabels: true
                      extremas: true

                  - entity: sensor.accuweather_temperature_hourly
                    type: area
                    name: Accuweather Forecast
                    yaxis_id: main
                    stroke_width: .5
                    color: var(--primary-text-color)
                    opacity: .1
                    data_generator: |
                      const now = new Date();
                      const data = [[now.getTime(), entity.state]];
                      for(let i = 0; i <= 12; i++) {
                        data.push([now.getTime() + i * 1000 * 60 * 60, entity.attributes[i + "h"]]);
                      }
                      return data.reverse();


          - type: custom:apexcharts-card
            config_templates: environment_chart
            update_interval: 15m
            series:

              - entity: sensor.bedroom_air_conditioner_plug_smartenergy_metering
                name: Bedroom A/C
                type: area
                group_by:
                  func: first
                  duration: 15m
                yaxis_id: main
                color: 'var(--primary-color)'
                show:
                  datalabels: true
                unit: W

              - entity: sensor.living_room_air_conditioner_plug_smartenergy_metering
                name: Living Room A/C
                type: area
                group_by:
                  func: first
                  duration: 15m
                yaxis_id: main
                color: green
                show:
                  datalabels: true
                unit: W

            yaxis:
              - id: main
                min: 0
                max: ~0
                show: false

            apex_config:
              chart:
                height: 80px

            card_mod: &apexcharts-card-mod
              style:
                .: |
                  #graph {margin-left: 0; margin-top: -16px;}
                  .apexcharts-yaxis-label { font-family: var(--font-stack) !important; 
                    font-size: var(--h6-font-size) !important;
                    opacity: 0.15;}
                  .apexcharts-yaxis-label:nth-child(5n+1) { opacity: .5;}
                  .apexcharts-xaxis-label { opacity: .5; transform: translate(0, -12px); }
                  .apexcharts-xaxis-annotation-label { font-family: var(--font-stack) !important; 
                    font-size: var(--h6-font-size) !important; font-weight: 600 !important;}                          
                  .apexcharts-point-annotation-label { font-family: var(--font-stack) !important; 
                    font-size: var(--h6-font-size) !important; font-weight: normal !important;}

          - type: history-graph
            entities:
              - entity: binary_sensor.living_room_window_sensor_center_ias_zone
                name: Living Rm C
              - entity: binary_sensor.living_room_window_sensor_right_ias_zone
                name: Living Rm R
              - entity: binary_sensor.bedroom_window_sensor_left_ias_zone
                name: Bedroom L
              - entity: binary_sensor.bedroom_window_sensor_center_ias_zone
                name: Bedroom C
            hours_to_show: 36
            title: Windows
            show_names: false
            card_mod: &history-graph-card-mod
              style: >
                ha-card {}

                .content {
                  padding: 0 0 16px 0 !important;
                  margin: 0 0 0 -20px;
                  width: calc(75% + 20px);
                  border-right: 1px dashed var(--primary-color);
                }

                .card-header {
                  padding: 16px !important;
                  margin: 0 !important;
                  font-size: var(--body-font-size);
                  font-weight: var(--body-font-weight);
                  line-height: var(--body-line-height);
                }

                state-history-charts {margin-left: 20px;}


          # - type: vertical-stack
          #   in_card: true
          #   cards:

          #     - type: sensor
          #       entity: sensor.valhalla_cloud_cover
          #       name: Cloud Cover

          #     - type: custom:apexcharts-card
          #       config_templates: environment_chart
          #       series:

          #         - entity: sensor.valhalla_cloud_cover
          #           name: Brooklyn
          #           yaxis_id: main
          #           color: 'var(--primary-color)'
          #           show:
          #             datalabels: true

          #         - entity: sensor.accuweather_cloud_cover_hourly
          #           name: Accuweather Forecast
          #           yaxis_id: main
          #           color: var(--primary-color)
          #           data_generator: |
          #             const now = new Date();
          #             const data = [[now.getTime(), entity.state]];
          #             for(let i = 0; i <= 12; i++) {
          #               data.push([now.getTime() + i * 1000 * 60 * 60, entity.attributes[i + "h"]]);
          #             }
          #             return data.reverse();

          #       yaxis:
          #         - id: main
          #           min: 0
          #           max: 100
          #       apex_config:
          #         chart:
          #           height: 160px

        layout:
          margin: 0
          max_cols: 1
          max_width: 800


      # [Column] Humidity
      - type: vertical-stack
        cards:

          - type: 'custom:button-card'
            template: header_card_no_link
            variables:
              name: HUMIDITY
            view_layout:
              grid-column-start: 1
              grid-column-end: -1

          - type: vertical-stack
            in_card: true
            cards:

              - type: horizontal-stack
                cards:

                  - type: entity
                    entity: sensor.accuweather_relative_humidity
                    name: Outdoor
                    icon: none

                  - type: entity
                    entity: sensor.indoor_average_humidity
                    name: Indoor Average
                    icon: none

                  - type: 'custom:card-templater'
                    card:
                      type: entity
                      entity: sensor.indoor_outdoor_humidity_difference
                      name_template: >
                        {{ state_attr('sensor.indoor_outdoor_humidity_difference', 'description') | capitalize }} by
                      card_mod:
                        style: |
                          ha-card {background: none;}
                    entities:
                      - sensor.indoor_outdoor_humidity_difference

              - type: custom:apexcharts-card
                config_templates: environment_chart
                yaxis:
                  - id: main
                    min: 0
                    max: 100
                    apex_config:
                      tickAmount: 9
                apex_config:
                  dataLabels:
                    formatter: |
                      EVAL:function(value, { seriesIndex, dataPointIndex, w }) {
                        if (dataPointIndex == w.config.series[seriesIndex].data.length - 2) {
                          return Math.round( value * 10 ) / 10 + "% - " + w.config.series[seriesIndex].name  // + " " + dataPointIndex + " " + w.config.series[seriesIndex].data.length
                        } else { return '' }
                      }
                series:

                  - entity: sensor.sun_elevation
                    color: var(--primary-text-color)
                    opacity: .2
                    stroke_width: 2
                    yaxis_id: sun
                    show:
                      legend_value: false

                  - entity: sensor.sun_elevation
                    color: var(--primary-text-color)
                    opacity: .2
                    stroke_width: 1
                    yaxis_id: sun
                    data_generator: |
                      const now = new Date();
                      const data = [[now.getTime() - 172800000, 0], [now.getTime(), 0], [now.getTime() + 86400000, 0]];
                      return data;

                  - entity: sensor.accuweather_relative_humidity
                    type: area
                    name: Accuweather
                    yaxis_id: main
                    stroke_width: .5
                    color: gray
                    opacity: .1
                    show:
                      datalabels: true
                      extremas: true

                  - entity: sensor.netatmo_strawberry_land_indoor_outdoor_humidity
                    name: Outside Netatmo
                    stroke_width: .5
                    color: gray
                    yaxis_id: main
                    group_by:
                      func: first
                      duration: 30min
                    show:
                      datalabels: true

                  - entity: sensor.storage_environment_sensor_humidity
                    name: Storage
                    stroke_width: 1
                    color: brown
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.bathroom_env_sensor_humidity
                    name: Bathroom
                    stroke_width: 1
                    color: turquoise
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.kitchen_counter_air_quality_sensor_humidity
                    name: Kitchen
                    stroke_width: 1
                    color: purple
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  # - entity: sensor.kitchen_stove_monitor_humidity
                  #   name: Kitchen Stove
                  #   stroke_width: 1
                  #   color: purple
                  #   yaxis_id: main
                  #   show:
                  #     datalabels: true
                  #   group_by:
                  #     func: first
                  #     duration: 30min

                  # - entity: sensor.living_room_air_purifier_humidity
                  #   name: Living Room Awair
                  #   stroke_width: 1
                  #   color: green
                  #   yaxis_id: main
                  #   show:
                  #     datalabels: true
                  #   group_by:
                  #     func: first
                  #     duration: 30min

                  - entity: sensor.living_room_env_sensor_humidity
                    name: Living Room
                    stroke_width: 1
                    color: green
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.workspace_env_sensor_humidity
                    name: Workspace
                    stroke_width: 1
                    color: orange
                    yaxis_id: main
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.netatmo_strawberry_land_indoor_humidity
                    name: Bedroom Netatmo
                    stroke_width: 1
                    yaxis_id: main
                    color: hotpink
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.indoor_average_humidity
                    name: Indoor Avg
                    color: 'var(--primary-color)'
                    yaxis_id: main
                    show:
                      datalabels: true
                      extremas: true

                  - entity: sensor.accuweather_relative_humidity_hourly
                    type: area
                    name: Accuweather Forecast
                    yaxis_id: main
                    stroke_width: .5
                    color: var(--primary-text-color)
                    opacity: .1
                    data_generator: |
                      const now = new Date();
                      const data = [[now.getTime(), entity.state]];
                      for(let i = 0; i <= 12; i++) {
                        data.push([now.getTime() + i * 1000 * 60 * 60, entity.attributes[i + "h"]]);
                      }
                      return data.reverse();

                card_mod: *apexcharts-card-mod

          - type: vertical-stack
            in_card: true
            cards:

              - type: sensor
                entity: sensor.netatmo_brooklyn_rain

              - type: custom:apexcharts-card
                config_templates: environment_chart
                series:
                  - entity: sensor.netatmo_brooklyn_rain
                    name: mm
                    yaxis_id: main
                    color: 'var(--primary-color)'
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.accuweather_total_precipitation_hourly
                    name: Accuweather Forecast
                    yaxis_id: main
                    color: var(--primary-color)
                    data_generator: |
                      const now = new Date();
                      const data = [[now.getTime(), entity.state]];
                      for(let i = 0; i <= 12; i++) {
                        data.push([now.getTime() + i * 1000 * 60 * 60, entity.attributes[i + "h"]]);
                      }
                      return data.reverse();

                yaxis:
                  - id: main
                    min: 0
                    max: ~5
                apex_config:
                  chart:
                    height: 160px

          - type: history-graph
            entities:
              - entity: sensor.bedroom_humidifier_power
            hours_to_show: 36
            title: Bedroom Humidifier
            show_names: false
            card_mod: *history-graph-card-mod


      # [Column] Air Quality
      - type: vertical-stack
        cards:
          - type: 'custom:button-card'
            template: header_card
            variables:
              name: AIR QUALITY
              label: AQIcn
              arrow: 'mdi:arrow-top-right'
              action: url
              link: https://aqicn.org/city/usa/newyork/
            view_layout:
              grid-column-start: 1
              grid-column-end: -1

          - type: vertical-stack
            xtitle: Particulate Matter (PM25)
            in_card: true
            cards:

              - type: horizontal-stack
                cards:
                  # - type: sensor
                  #   entity: sensor.netatmo_strawberry_land_indoor_co2
                  #   name: Bedroom CO₂
                  - type: sensor
                    entity: sensor.waqi_newyork_particulate_matter_pm25
                    name: Outside
                  - type: sensor
                    entity: sensor.living_room_air_purifier_particulate_matter
                    name: Living Room
                  - type: sensor
                    entity: sensor.workspace_air_purifier_particulate_matter
                    name: Workspace
                  # - type: sensor
                  #   entity: sensor.pure_hot_cool_link_volatile_organic_compounds
                  #   name: Bedroom
                  # - type: sensor
                  #   entity: sensor.kitchen_stove_monitor_voc_level
                  #   name: Kitchen

              - type: custom:apexcharts-card
                config_templates: environment_chart
                series:

                  - entity: sensor.waqi_newyork_particulate_matter_pm25
                    name: Outside
                    yaxis_id: main
                    color: gray
                    show:
                      datalabels: true

                  - entity: sensor.pure_hot_cool_link_particulates
                    name: Bedroom
                    yaxis_id: main
                    color: hotpink
                    stroke_width: 1
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.workspace_air_purifier_particulate_matter
                    name: Workspace Purifier
                    yaxis_id: main
                    color: orange
                    stroke_width: 1
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.living_room_air_purifier_particulate_matter
                    name: Living Room
                    yaxis_id: main
                    color: green
                    stroke_width: 1
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.workspace_air_quality_sensor_particulate_matter
                    name: Workspace
                    yaxis_id: main
                    color: orange
                    stroke_width: 1
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.kitchen_counter_air_quality_sensor_particulate_matter
                    name: Kitchen
                    yaxis_id: main
                    color: purple
                    stroke_width: 1
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  # - entity: sensor.pure_hot_cool_link_volatile_organic_compounds
                  #   name: Bedroom VOC
                  #   yaxis_id: second
                  #   show:
                  #     datalabels: true
                  #   group_by:
                  #     func: first
                  #     duration: 30min

                  # - entity: sensor.kitchen_stove_monitor_voc_level
                  #   name: Kitchen VOC
                  #   color: purple
                  #   yaxis_id: second
                  #   show:
                  #     datalabels: true
                  #   group_by:
                  #     func: first
                  #     duration: 30min

                  # - entity: sensor.netatmo_strawberry_land_indoor_co2
                  #   name: Bedroom CO₂
                  #   yaxis_id: main
                  #   show:
                  #     datalabels: true
                  #   group_by:
                  #     func: first
                  #     duration: 30min

                yaxis:
                  - id: main
                    min: 0
                    max: ~5
                    opposite: true
                    show: false
                apex_config:
                  chart:
                    xheight: 240px

          - type: history-graph
            entities:
              - entity: fan.pure_hot_cool_link
              - entity: fan.workspace_air_purifier
              - entity: fan.living_room_air_purifier_ikea_fan
            hours_to_show: 36
            show_names: false
            title: Air Purifiers
            card_mod: *history-graph-card-mod

          - type: vertical-stack
            in_card: true
            cards:

              - type: horizontal-stack
                cards:

                  - type: 'custom:button-card'
                    entity: weather.valhalla_2
                    name: '[[[ return states["sensor.wind_strength"].state ]]]'
                    show_state: true
                    state_display: |
                      [[[
                        var mph = Math.round(entity.attributes.wind_speed * 2.236936 * 10) / 10
                        return `${mph}<span style="font-size: var(--h6-font-size); font-weight: 700; opacity: .8"> MPH</span>`
                      ]]]
                    styles:
                      grid:
                        - grid-template-columns: 1fr min-content
                        - grid-template-areas: '"n i" "s s"'
                      card:
                        - padding: 16px
                      name:
                        - font-size: var(--body-font-size)
                        - align-self: start
                        - justify-self: start
                      state:
                        - font-size: var(--h1-font-size)
                        - font-weight: var(--h1-font-weight)
                        - align-self: start
                        - justify-self: start
                        - margin-top: -2px

                  - type: sensor
                    entity: sensor.valhalla_wind
                    name: ' '

                  - type: 'custom:button-card'
                    entity: weather.valhalla_2
                    name: |
                      [[[
                        var wb = entity.attributes.wind_bearing
                        if ((wb <= 30) || (wb >= 280)) { return 'From exhaust' }
                        if ((wb > 30) && (wb <= 90)) { return 'Towards Living Room' }
                        if ((wb > 90) && (wb <= 180)) { return 'Towards Bedroom' }
                      ]]]
                    icon: 'mdi:navigation'
                    color: var(--primary-color)
                    size: 24px
                    show_state: true
                    state_display:  '[[[ return states["sensor.wind_direction"].state ]]]'
                    styles:
                      grid:
                        - grid-template-columns: 1fr min-content
                        - grid-template-areas: '"n i" "s s"'
                      card:
                        - padding: 16px
                      name:
                        - font-size: var(--body-font-size)
                        - align-self: start
                        - justify-self: start
                      state:
                        - font-size: var(--h1-font-size)
                        - font-weight: var(--h1-font-weight)
                        - align-self: start
                        - justify-self: start
                        - margin-top: -2px
                      img_cell:
                        - transform: >-
                            [[[ return "rotate(" + entity.attributes.wind_bearing +
                            "deg)" ]]]

              - type: custom:apexcharts-card
                config_templates: environment_chart
                series:
                  - entity: sensor.valhalla_wind
                    name: km/h
                    yaxis_id: main
                    color: 'var(--primary-color)'
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.accuweather_wind_speed_hourly
                    name: Accuweather Forecast
                    yaxis_id: main
                    color: var(--primary-color)
                    opacity: .5
                    data_generator: |
                      const now = new Date();
                      const data = [[now.getTime(), entity.state]];
                      for(let i = 0; i <= 12; i++) {
                        data.push([now.getTime() + i * 1000 * 60 * 60, entity.attributes[i + "h"]]);
                      }
                      return data.reverse();

                yaxis:
                  - id: main
                    min: 0
                    max: ~5
                apex_config:
                  chart:
                    height: 160px

          - type: vertical-stack
            in_card: true
            cards:
              - type: horizontal-stack
                cards:
                  - type: entity
                    entity: sensor.waqi_newyork_air_quality_index
                    icon: none
                    name: WAQI New York
                  - type: entity
                    entity: sensor.waqi_maspeth_air_quality_index
                    name: WAQI Maspeth

              - type: custom:apexcharts-card
                config_templates: environment_chart
                series:
                  - entity: sensor.waqi_newyork_air_quality_index
                    name: WAQI
                    yaxis_id: second
                    show:
                      datalabels: true

                  - entity: sensor.waqi_newyork_carbon_monoxide_co
                    name: Carbon Monoxide (CO)
                    yaxis_id: main
                    show:
                      datalabels: true

                  - entity: sensor.waqi_newyork_ozone_o3
                    name: Ozone (O₃)
                    yaxis_id: main
                    show:
                      datalabels: true

                  - entity: sensor.waqi_newyork_nitrogen_dioxide_no2
                    name: Nitrogen Dioxide (NO₂)
                    yaxis_id: main
                    show:
                      datalabels: true

                  - entity: sensor.waqi_newyork_particulate_matter_pm25
                    name: Particulate Matter (PM25)
                    yaxis_id: main
                    show:
                      datalabels: true

                yaxis:
                  - id: main
                  - id: second
                apex_config:
                  chart:
                    height: 240px



      # [Column] Irradiance
      - type: vertical-stack
        cards:
          - type: 'custom:button-card'
            template: header_card_no_link
            variables:
              name: IRRADIANCE
            view_layout:
              grid-column-start: 1
              grid-column-end: -1

          - type: vertical-stack
            in_card: true
            cards:

              - type: sensor
                entity: sensor.accuweather_solar_irradiance_hourly
                name: Solar Irradiance

              - type: custom:apexcharts-card
                config_templates: environment_chart
                series:

                  - entity: sensor.accuweather_solar_irradiance_hourly
                    yaxis_id: main
                    color: gray
                    name: Accuweather
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.south_facade_hue_sensor_light_level
                    yaxis_id: second
                    color: 'var(--primary-color)'
                    name: South Facade
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                  - entity: sensor.accuweather_solar_irradiance_hourly
                    name: Accuweather Forecast
                    yaxis_id: main
                    color: var(--primary-text-color)
                    opacity: .5
                    data_generator: |
                      const now = new Date();
                      const data = [[now.getTime(), entity.state]];
                      for(let i = 0; i <= 12; i++) {
                        data.push([now.getTime() + i * 1000 * 60 * 60, entity.attributes[i + "h"]]);
                      }
                      return data.reverse();

                yaxis:
                  - id: main
                    align_to: 100
                  - id: second
                    min: 0
                    max: ~10000
                    align_to: 1000
                    show: false
                apex_config:
                  chart:
                    height: 160px

      # [Column] Noise
      - type: vertical-stack
        cards:
          - type: 'custom:button-card'
            template: header_card_no_link
            variables:
              name: NOISE
            view_layout:
              grid-column-start: 1
              grid-column-end: -1

          - type: vertical-stack
            in_card: true
            cards:

              - type: sensor
                entity: sensor.netatmo_strawberry_land_indoor_noise

              - type: custom:apexcharts-card
                config_templates: environment_chart
                series:

                  - entity: sensor.netatmo_strawberry_land_indoor_noise
                    yaxis_id: main
                    color: 'var(--primary-color)'
                    show:
                      datalabels: true
                    group_by:
                      func: first
                      duration: 30min

                yaxis:
                  - id: main
                apex_config:
                  chart:
                    height: 160px
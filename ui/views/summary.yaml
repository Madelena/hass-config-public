# MAXIMALIST DASHBOARD
# Summary View
# Made by Madelena Mak 2022

title: Summary
icon: 'mdi:home-circle'
path: 'summary'

# Most of the layouts are based on CSS Grids using layout-card.
# The cards are first set inside a layout card for margins
# and then inside another layout card for the columns for the top half,
# while the bottom half is a layout-card in masonry layout.

# Learn more about CSS Grids:
# https://css-tricks.com/snippets/css/complete-guide-grid/

type: 'custom:grid-layout'
layout:
  grid-template-rows: auto 32px
  grid-template-columns: 8px 1fr 8px
  grid-template-areas: |
    ". cc ." ". . ."
  margin: 0
  card_margin: 0
  mediaquery:
    '(min-width: 1704px)':
      grid-template-columns: auto 1600px auto
      grid-template-areas: |
        ". cc ." ". . ."
    '(min-width: 1200px)':
      grid-template-columns: 0 auto 0
      grid-template-areas: |
        ". cc ."
      grid-column-gap: 32px

cards:

  - type: 'custom:layout-card'
    layout_type: 'custom:grid-layout'

    layout:
      grid-template-columns: >-
        calc( 20% - 24px ) calc( 20% - 24px ) calc( 20% - 24px ) calc( 20% - 24px ) calc(
        20% - 24px )
      grid-column-gap: 32px
      grid-template-areas: |
        "h h h h h"
        "c1 fp fp c2 c3"
      mediaquery:
        '(max-width: 511.99px)':
          grid-template-columns: 1fr
          grid-template-areas: |
            "h"
            "fp"
            "c1"
            "c2"
          margin: 0
        '(max-width: 799.99px)':
          grid-template-columns: 1fr 1fr
          grid-template-areas: |
            "h h"
            "fp fp"
            "c1 c2"
          margin: 0
        '(max-width: 1127.99px)':
          grid-template-columns: 1fr 1fr 1fr
          grid-template-areas: |
            "h h h"
            "c1 fp fp"
            "c2 none none"
          margin: 0
        '(max-width: 1439.99px)':
          grid-template-columns: >-
            calc( 25% - 24px ) calc( 25% - 24px ) calc( 25% - 24px ) calc(
            25% - 24px )
          grid-template-areas: |
            "h h h h"
            "c1 fp fp c2"
          margin: 0
      margin: 0

    view_layout:
      grid-area: cc

    cards:

      # [Header] Greetings

      - type: custom:state-switch
        entity: user
        default: default
        view_layout:
          grid-area: h
        states:
          Maddy:
            type: 'custom:layout-card'
            layout_type: 'custom:grid-layout'

          default:
            type: 'custom:layout-card'
            layout_type: 'custom:grid-layout'
            layout:
              grid-template-columns: auto min-content
              grid-template-rows: auto
              margin: -1px -1px -1px -1px
              padding: 0
            cards:
                
              - type: markdown
                content: >
                  # {% if now() > today_at('18:00') %}Good evening{% elif
                  now() > today_at('12:00') %}Good afternoon{% elif now() >
                  today_at('5:00') %}Good morning{% else %}Good night{%
                  endif %}, {{ user }}.
                style:
                  .: |
                    ha-card {
                      background: none;
                      margin-bottom: -16px;
                    }
                  ha-markdown$: |
                    h1 {
                      font-size: var(--title-font-size);
                      font-weight: 600;
                      line-height: 1.1;
                      margin-left: -2px;
                      margin-top: -12px !important;
                    }

              - type: 'custom:layout-card'
                layout_type: 'custom:horizontal-layout'
                cards:
                  - type: 'custom:mushroom-person-card'
                    entity: person.madelena
                    style: 'ha-card {background: none;}'
                    use_entity_picture: true
                    view_layout: null
                layout:
                  width: 160
                  margin: -1
                view_layout:
                  place-self: center
                  show:
                    mediaquery: '(min-width: 800px)'

              - type: 'custom:layout-card'
                layout_type: 'custom:horizontal-layout'
                cards:
                  - type: 'custom:mushroom-person-card'
                    entity: person.madelena
                    use_entity_picture: true
                    hide_state: true
                    hide_name: true
                    style: |
                      ha-card {background: none;
                        margin-top: 16px;
                        transform: scale(1.5) translate(-8px);
                      }
                layout:
                  width: 72
                view_layout:
                  place-self: start
                  show:
                    mediaquery: '(max-width: 799.99px)'


      # [Floor Plan Diagram] USS Strawberry Fields

      - type: 'custom:layout-card'
        layout_type: 'custom:grid-layout'
        layout:
          margin: -1px
        view_layout:
          grid-area: fp
        cards:

          - type: custom:state-switch
            entity: user
            default: default
            states:
              default: &summary-floorplan-header
                type: 'custom:button-card'
                template: header_card
                variables:
                  name: U.S.S. STRAWBERRY FIELDS
                  label: Areas
                  link: /config/areas/dashboard
              Maddy:
                <<: *summary-floorplan-header
                styles:
                  card:
                    - margin-top: -20px

          - type: 'custom:floorplan-card'
            config:
              image:
                location: /local/uss-strawberry-fields.svg
                cache: false
              stylesheet: /local/ha-floorplan.css
              defaults:
                hover_action: hover-info
                tap_action: more-info
              rules:

                - entity: group.bedroom_lights
                  element: group.bedroom_lights.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entity: group.kitchen_lights
                  element: group.kitchen_lights.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entity: group.workspace_lights
                  element: group.workspace_lights.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entity: group.living_room_lights
                  element: group.living_room_lights.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entities:
                    - binary_sensor.bedroom_hue_sensor_motion
                    - binary_sensor.kitchen_counter_motion_sensor_motion
                    - binary_sensor.workspace_room_hue_sensor_motion
                    - binary_sensor.living_room_hue_sensor_motion
                  state_action:
                    action: call-service
                    service: floorplan.text_set
                    service_data: '${(entity.state === "on") ? "Detected" : "Clear"}'

                - entity: binary_sensor.bedroom_hue_sensor_motion
                  element: binary_sensor.bedroom_hue_sensor_motion.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entity: binary_sensor.kitchen_counter_motion_sensor_motion
                  element: >-
                    binary_sensor.kitchen_counter_motion_sensor_motion.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entity: binary_sensor.workspace_room_hue_sensor_motion
                  element: binary_sensor.workspace_room_hue_sensor_motion.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entity: binary_sensor.living_room_hue_sensor_motion
                  element: binary_sensor.living_room_hue_sensor_motion.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entities:
                    - binary_sensor.bathroom_leak_sensor_wet
                    - binary_sensor.kitchen_leak_sensor_ias_zone
                  state_action:
                    action: call-service
                    service: floorplan.text_set
                    service_data: '${(entity.state === "on") ? "Wet" : "Dry"}'

                - entity: binary_sensor.bathroom_leak_sensor_wet
                  element: binary_sensor.bathroom_leak_sensor_wet.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: >-
                        ${(entity.state === "on") ? "bg-urgent" :
                        "bg-off"}

                - entity: binary_sensor.kitchen_leak_sensor_ias_zone
                  element: binary_sensor.kitchen_leak_sensor_ias_zone.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: >-
                        ${(entity.state === "on") ? "bg-urgent" :
                        "bg-off"}

                - entities:
                    - group.bedroom_lights
                    - group.workspace_lights
                    - group.living_room_lights
                    - group.kitchen_lights
                    - binary_sensor.bedroom_air_conditioner_power
                  state_action:
                    action: call-service
                    service: floorplan.text_set
                    service_data: '${entity.state}'

                - entities:
                    - >-
                      binary_sensor.bedroom_window_sensor_center_ias_zone
                    - >-
                      binary_sensor.living_room_window_sensor_center_ias_zone
                  state_action:
                    action: call-service
                    service: floorplan.text_set
                    service_data: '${(entity.state === "on") ? "Open" : "Closed"}'

                - entity: binary_sensor.bedroom_window_sensor_center_ias_zone
                  element: >-
                    binary_sensor.bedroom_window_sensor_center_ias_zone.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entity: >-
                    binary_sensor.living_room_window_sensor_center_ias_zone
                  element: >-
                    binary_sensor.living_room_window_sensor_center_ias_zone.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'

                - entity: sensor.workspace_env_sensor_temperature
                  tap_action: more-info
                  state_action:
                    action: call-service
                    service: floorplan.text_set
                    service_data: '${entity.state}'

                - entities:
                    - sensor.bathroom_env_sensor_temperature
                    - sensor.workspace_env_sensor_temperature
                    - sensor.bedroom_hue_sensor_temperature
                    - sensor.living_room_env_sensor_temperature
                    - sensor.storage_environment_sensor_temperature
                  state_action:
                    action: call-service
                    service: floorplan.text_set
                    service_data: '${entity.state + " °C"}'

                - entity: >-
                    sensor.bathroom_env_sensor_temperature
                  element: >-
                    sensor.bathroom_env_sensor_temperature.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state > 27) || (entity.state < 20) ? "bg-on" : "bg-off"}'

                - entity: >-
                    sensor.storage_environment_sensor_temperature
                  element: >-
                    sensor.storage_environment_sensor_temperature.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state > 27) || (entity.state < 20) ? "bg-on" : "bg-off"}'

                - entity: >-
                    sensor.workspace_env_sensor_temperature
                  element: >-
                    sensor.workspace_env_sensor_temperature.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state > 27) || (entity.state < 20) ? "bg-on" : "bg-off"}'

                - entity: >-
                    sensor.bedroom_hue_sensor_temperature
                  element: >-
                    sensor.bedroom_hue_sensor_temperature.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state > 27) || (entity.state < 20) ? "bg-on" : "bg-off"}'

                - entity: >-
                    sensor.living_room_env_sensor_temperature
                  element: >-
                    sensor.living_room_env_sensor_temperature.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state > 27) || (entity.state < 20) ? "bg-on" : "bg-off"}'

                - entity: >-
                    sensor.workspace_env_sensor_temperature
                  element: >-
                    sensor.workspace_env_sensor_temperature.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state > 27) || (entity.state < 20) ? "bg-on" : "bg-off"}'

                - entities:
                    - climate.living_room_air_conditioner_window_ac
                  state_action:
                    action: call-service
                    service: floorplan.text_set
                    service_data: '${(entity.attributes.temperature != null) ? entity.attributes.temperature + " °C" : "off"}'

                - entity: climate.living_room_air_conditioner_window_ac
                  element: livingroom.climate.icon
                  tap_action: false
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "cool") ? "icon-spinning" : "icon"}'

                - entity: binary_sensor.bedroom_air_conditioner_power
                  element: bedroom.climate.icon
                  tap_action: false
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "icon-spinning" : "icon"}'

                - entity: climate.living_room_air_conditioner_window_ac
                  element: livingroom.climate.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "cool") ? "bg-on" : "bg-off"}'
                  tap_action:
                    action: call-service
                    service: homeassistant.toggle
                    service_data:
                      entity_id: climate.living_room_air_conditioner_window_ac
                    confirmation:
                      text: Switch Living Room Air Conditioner?

                - entity: >-
                    binary_sensor.bedroom_air_conditioner_power
                  element: >-
                    bedroom.climate.bg
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: '${(entity.state === "on") ? "bg-on" : "bg-off"}'
                  tap_action:
                    action: call-service
                    service: homeassistant.toggle
                    service_data:
                      entity_id: switch.bedroom_air_conditioner
                    confirmation:
                      text: Switch Bedroom Air Conditioner?

                - element: workspace.pointer
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: >-
                        ${((states["group.workspace_lights"].state ===
                        "on") |
                        (states["binary_sensor.workspace_room_hue_sensor_motion"].state
                        === "on")) ? "bg-on" : "bg-off"}

                - element: bedroom.pointer
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: >-
                        ${((states["group.bedroom_lights"].state ===
                        "on") |
                        (states["binary_sensor.bedroom_hue_sensor_motion"].state
                        === "on") |
                        (states["binary_sensor.bedroom_window_sensor_center_ias_zone"].state
                        === "on")) ? "bg-on" : "bg-off"}

                - element: livingroom.pointer
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: >-
                        ${((states["group.living_room_lights"].state ===
                        "on") |
                        (states["binary_sensor.living_room_hue_sensor_motion"].state
                        === "on") |
                        (states["binary_sensor.living_room_window_sensor_center_ias_zone"].state
                        === "on")) ? "bg-on" : "bg-off"}

                - element: kitchen.pointer
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: >-
                        ${((states["group.kitchen_lights"].state ===
                        "on") |
                        (states["binary_sensor.kitchen_counter_motion_sensor_motion"].state
                        === "on")) ? "bg-on" : "bg-off"}

                - element: bathroom.pointer
                  state_action:
                    action: call-service
                    service: floorplan.class_set
                    service_data:
                      class: >-
                        ${((states["binary_sensor.bathroom_leak_sensor_wet"].state
                        === "on")) ? "bg-urgent" : "bg-off"}

                # - element: storage.pointer
                #   state_action:
                #     action: call-service
                #     service: floorplan.class_set
                #     service_data:
                #       class: >-
                #         ${((states["binary_sensor.bathroom_leak_sensor_wet"].state
                #         === "on")) ? "bg-urgent" : "bg-off"}

            card_mod:
              style: |
                ha-card {background: none;}


      # [Column] Energy / Security

      - type: 'custom:layout-card'
        layout_type: 'custom:grid-layout'
        layout:
          margin: 0
          card_margin: 1px
        view_layout:
          grid-area: c1
        cards:

          - type: 'custom:layout-card'
            layout_type: 'custom:grid-layout'
            layout:
              grid-template-columns: >-
                repeat(auto-fill, [col-start] minmax(112px, 1fr)
                [col-end])
              margin: 0
              card_margin: 1px
              padding: 0
            cards:

              - type: custom:state-switch
                entity: user
                default: default
                view_layout:
                  grid-column: 1/-1
                states:
                  default: &summary-energy-header
                    type: 'custom:button-card'
                    template: header_card
                    variables:
                      name: ENERGY
                      label: More
                      link: /ui-dashboard/energy
                  Maddy:
                    <<: *summary-energy-header
                    styles:
                      card:
                        - margin-top: -20px

              - type: 'custom:button-card'
                template:
                  - live_tile_with_graph
                  - live_tile_with_state_unit
                  - live_tile_with_graph_threshold
                variables:
                  aspect_ratio: 2/1
                  state_display: '[[[ return Math.round(entity.state) ]]]'
                  points_per_hour: 4
                  hours_to_show: 24
                  graph_height: 96
                  line_width: 2
                  line_color_lower_bound: 0
                  line_color_upper_bound: 750
                  line_color_upper_bound_max: 1000
                entity: sensor.total_energy_use
                name: Total Energy Usage
                icon: 'mdi:home-lightning-bolt'
                view_layout:
                  grid-column: span 2


          - type: 'custom:layout-card'
            layout_type: 'custom:grid-layout'
            layout:
              grid-template-columns: >-
                repeat(auto-fill, [col-start] minmax(112px, 1fr)
                [col-end])
              margin: 0
              card_margin: 1px
            cards:

              - type: 'custom:button-card'
                template: header_card
                variables:
                  name: SECURITY
                  label: More
                  link: /ui-dashboard/security
                view_layout:
                  grid-column: 1/-1

              - type: 'custom:button-card'
                template:
                  - live_tile_card
                  - live_tile_with_long_state
                  - live_tile_with_state_countdown
                entity: binary_sensor.front_door_switchbot_contact_sensor_door_open
                name: Front Door
                triggers_update: all
                state_display: |
                  [[[
                    var lockState = states["lock.front_door_deadbolt_lock"].state
                    return (lockState.charAt(0).toUpperCase() + lockState.slice(1)) + " + " + ((entity.state == "on") ? "Open" : "Closed")
                  ]]]
                styles:
                  grid:
                    - background: |
                        [[[
                          if (entity.state == "on") { return "var(--accent-color)" }
                          if (states["lock.front_door_deadbolt_lock"].state == "jammed") { return "var(--accent-color)" }
                          if (states["lock.front_door_deadbolt_lock"].state == "unlocked") { return "rgb(var(--rgb-primary-color), .5)" }
                          return "var(--ha-card-background)"
                        ]]]
                variables:
                  aspect_ratio: '[[[ return Math.round(this.offsetWidth / 112) ]]]'
                  duration: 300
                tap_action:
                  action: more-info
                  entity: lock.front_door_deadbolt_lock
                view_layout:
                  grid-column: 1/-2

              - type: 'custom:button-card'
                template:
                  - live_tile
                entity: alarm_control_panel.alexa_guard
                show_state: false
                state:
                  - value: armed_away
                    color: 'rgb(var(--rgb-primary-color))'
                    icon: mdi:shield-home
                  - value: disarmed
                    color: >-
                      [[[ return iif( states["person.madelena"].state == "home",
                      "none", "rgb(var(--rgb-primary-color))") ]]]
                    icon: mdi:shield-off

              - type: 'custom:swipe-card'
                parameters: &summary-live-tile-swipe-card-parameters
                  direction: vertical
                  autoHeight: true
                  effect: cube
                  cubeEffect:
                    - slideShadows: false
                  autoplay:
                    delay: 60000
                card_mod:
                  style: &summary-live-tile-swipe-card-style |
                    ha-card {aspect-ratio: 1; min-height: 112px !important; height: auto !important;}
                    layout-card {aspect-ratio: 1; min-height: 112px !important; height: auto !important;}
                cards: !include ../shared/secret/summary-cameras.yaml

              - type: 'custom:swipe-card'
                parameters: *summary-live-tile-swipe-card-parameters
                style: *summary-live-tile-swipe-card-style
                cards:
                  - type: 'custom:button-card'
                    template: live_tile_with_small_picture
                    entity: person.madelena
                    state:
                      - value: home
                        color: var(--ha-card-background)
                      - value: not_home
                        color: var(--primary-color)
                    styles:
                      name:
                        - color: var(--primary-text-color)
                      state:
                        - color: var(--primary-text-color)
                  - type: 'custom:button-card'
                    template: live_tile_with_small_picture
                    entity: person.marina
                    state:
                      - value: home
                        color: var(--ha-card-background)
                      - value: not_home
                        color: var(--primary-color)
                    styles:
                      name:
                        - color: var(--primary-text-color)
                      state:
                        - color: var(--primary-text-color)


      # [Column] Network / Lights

      - type: 'custom:layout-card'
        layout_type: 'custom:grid-layout'
        layout:
          margin: 0
          padding: 0
          card_margin: 1px
        view_layout:
          grid-area: c2
          show:
            mediaquery: '(min-width: 1128px), (max-width: 799.99px)'
        cards:

          - type: 'custom:layout-card'
            layout_type: 'custom:grid-layout'
            layout: !include ../shared/snippets/layout-live-tile.yaml
            cards: &summary-column-emvironment-cards

              - type: 'custom:button-card'
                template: header_card
                variables:
                  name: ENVIRONMENT
                  label: More
                  link: /ui-dashboard/climate
                view_layout:
                  grid-column: 1/-1

              - type: 'custom:button-card'
                template:
                  - live_tile_with_graph
                  - live_tile_with_state_unit
                variables:
                  state_display: '[[[ return Math.round(entity.state * 10) / 10 ]]]'
                  line_color: |
                    [[[
                      if (states["sensor.indoor_temperature_legal_limit"].state != 'unknown') {
                        if (parseFloat(entity.state) <= states["sensor.indoor_temperature_legal_limit"].state) { return "var(--rgb-primary-text-color)" }
                        if (states["sensor.netatmo_strawberry_land_indoor_temperature"].state <= states["sensor.indoor_temperature_legal_limit"].state) { return "var(--rgb-primary-text-color)" }
                      }
                      return "var(--rgb-accent-color)"
                    ]]]
                  line_color_upper_bound: 25
                  line_color_lower_bound: 22
                  line_color_upper_bound_max: 32
                  line_color_lower_bound_min: 14
                entity: sensor.indoor_average_temperature
                name: |
                  [[[
                    if (states["sensor.indoor_temperature_legal_limit"].state == 'unknown') { return states["sensor.thermal_comfort_indoor_average_simmerzone"].state.replace(/_/g, " ") }
                    if (parseFloat(entity.state) <= states["sensor.indoor_temperature_legal_limit"].state) { return "Below Legal Limit" }
                    if (states["sensor.netatmo_strawberry_land_indoor_temperature"].state <= states["sensor.indoor_temperature_legal_limit"].state) { return "Bedroom Below Legal" }
                    return states["sensor.thermal_comfort_indoor_average_simmerzone"].state.replace(/_/g, " ")
                  ]]]
                styles:
                  name:
                    - text-transform: capitalize
                  card:
                    - background-color: var(--ha-card-background)
                  grid:
                    - background-color: |
                        [[[
                          var temp = parseFloat(entity.state)
                          if (states["sensor.indoor_temperature_legal_limit"].state != 'unknown') {
                            if (temp <= states["sensor.indoor_temperature_legal_limit"].state) { return "var(--accent-color)"}
                            if (states["sensor.netatmo_strawberry_land_indoor_temperature"].state <= states["sensor.indoor_temperature_legal_limit"].state) { return "var(--accent-color)"}
                          }
                          if (temp >= 25) {
                            return "rgba(var(--rgb-primary-color)," + (Math.min((temp - 25) / 7, 1) * .5) + ")"
                          }
                          if (temp <= 22) {
                            return "rgba(var(--rgb-primary-color)," + (Math.min((22 - temp) / 14, 1) * .5) + ")"
                          }
                          return "var(--ha-card-background)"
                        ]]]

              - type: 'custom:button-card'
                template:
                  - live_tile_with_graph
                  - live_tile_with_state_unit
                  - live_tile_with_graph_threshold
                variables:
                  state_display: '[[[ return Math.round(entity.state * 10) / 10 ]]]'
                  line_color_upper_bound: 60
                  line_color_lower_bound: 30
                  line_color_upper_bound_max: 80
                  line_color_lower_bound_min: 10
                entity: sensor.indoor_average_humidity
                name: '[[[ return states["sensor.thermal_comfort_indoor_average_perception"].state.replace(/_/g, " ") ]]]'
                icon: mdi:water
                styles:
                  name:
                    - text-transform: capitalize

              - type: 'custom:button-card'
                template:
                  - live_tile_with_graph
                  - live_tile_with_state_unit
                  - live_tile_with_graph_threshold
                variables:
                  state_display: '[[[ return Math.round(entity.state * 10) / 10 ]]]'
                  line_color_upper_bound: 50
                  line_color_lower_bound: 0
                  line_color_upper_bound_max: 25
                  line_color_lower_bound_min: -1
                entity: sensor.workspace_air_quality_sensor_particulate_matter
                name: Air Quality
                # name: '[[[ return states["sensor.thermal_comfort_indoor_average_perception"].state.replace(/_/g, " ") ]]]'
                icon: mdi:air-filter
                styles:
                  name:
                    - text-transform: capitalize


          - type: 'custom:layout-card'
            layout_type: 'custom:grid-layout'
            layout:
              grid-template-columns: >-
                repeat(auto-fill, [col-start] minmax(112px, 1fr)
                [col-end])
              margin: 0
              card_margin: 1px
            cards: &summary-column-lights-cards

              - type: 'custom:button-card'
                template: header_card
                variables:
                  name: LIGHTS
                  label: All Lights
                  link: /ui-dashboard/lights
                view_layout:
                  grid-column: 1/-1

              - view_layout:
                  grid-column: span 2
                type: 'custom:button-card'
                template:
                  - light_button_card_group
                  - require_confirmation
                entity: group.all_lights
                name: All Lights
                icon: 'mdi:lightbulb-multiple'
                variables:
                  aspect_ratio: 2/1
                state:
                  - value: 'on'
                    label: >-
                      [[[ return
                      states["group.all_lights"].attributes.entity_id.filter(entity
                      => states[entity].state == "on").length + " lights
                      are on" ]]]


      # [Column] Network / Maintenance

      - type: 'custom:layout-card'
        layout_type: 'custom:grid-layout'
        layout:
          margin: 0
        view_layout:
          grid-area: c3
          show:
            mediaquery: '(min-width: 1440px)'
        cards: &summary-column-network-maintenance-cards


          # [Column] Network

          - type: 'custom:layout-card'
            layout_type: 'custom:grid-layout'
            layout: !include ../shared/snippets/layout-live-tile.yaml
            cards:

              - type: 'custom:button-card'
                template: header_card
                view_layout:
                  grid-column: 1/-1
                variables:
                  name: NETWORK
                  label: More
                  link: /ui-dashboard/1

              # - type: 'custom:button-card'
              #   template:
              #     - live_tile_card
              #     - live_tile_with_long_state
              #     - live_tile_with_state_countdown
              #   entity: binary_sensor.ping_cloudflare
              #   name: WAN
              #   state:
              #     - value: 'off'
              #       styles:
              #         card:
              #           - background: var(--primary-color)
              #     - value: 'on'
              #       styles:
              #         card:
              #           - background: var(--ha-card-background)
              #           - color: var(--primary-text-color)
              #   variables:
              #     aspect_ratio: '[[[ return Math.round(this.offsetWidth / 112) ]]]'
              #   view_layout:
              #     grid-column: 1/-2

              # - type: 'custom:button-card'
              #   template:
              #     - live_tile_with_graph
              #     - live_tile_with_state_unit
              #   variables:
              #     unit: Devices
              #   entity: sensor.valhalla_router_connected_devices
              #   name: Devices Connected

              - type: 'custom:button-card'
                template:
                  - live_tile_with_graph
                  - live_tile_with_state_unit
                  - live_tile_with_graph_threshold
                variables:
                  line_color_lower_bound: 60
                  line_color_upper_bound: 120
                  line_color_upper_bound_max: 200
                entity: sensor.speedtest_download
                name: Download

              - type: 'custom:button-card'
                template:
                  - live_tile_with_graph
                  - live_tile_with_state_unit
                  - live_tile_with_graph_threshold
                variables:
                  line_color_lower_bound: 30
                  line_color_upper_bound: 50
                  line_color_upper_bound_max: 70
                entity: sensor.speedtest_upload
                name: Upload


          # [Column] Maintenance

          - type: 'custom:layout-card'
            layout_type: 'custom:grid-layout'
            layout: !include ../shared/snippets/layout-live-tile.yaml
            cards:

              - type: 'custom:button-card'
                template: header_card
                variables:
                  name: MAINTENANCE
                  label: More
                  link: /ui-dashboard/maintenance
                view_layout:
                  grid-column: 1/-1

              - type: 'custom:button-card'
                template:
                  - live_tile_card
                  - live_tile_with_long_state
                  - chores_variables
                variables:
                  aspect_ratio: 2
                name: '[[[ return variables.chores_count_text ]]]'
                state_display: '[[[ return variables.chores_all_done_text ]]]'
                label: '[[[ return variables.chores_to_do_list ]]]'
                icon: mdi:clipboard-check-outline
                styles:
                  card:
                    - background: |
                        [[[
                          if (states["sensor.chores_overdue"].attributes.entities.length > 0) { return "var(--primary-color)" }
                          if (states["sensor.chores_to_do"].attributes.entities.length > 0) { return "rgba(var(--rgb-primary-color), .5)" }
                          return "var(--ha-card-background)"
                        ]]]
                    - color: |
                        [[[
                          if (states["sensor.chores_overdue"].attributes.entities.length > 0) { return "var(--accent-text-color)" }
                          if (states["sensor.chores_to_do"].attributes.entities.length > 0) { return "var(--primary-text-color)" }
                          return "var(--disabled-text-color)"
                        ]]]
                  label:
                    - padding-top: 8px
                  state:
                    - padding-top: 8px
                tap_action:
                  action: navigate
                  navigation_path: /ui-dashboard/chores
                view_layout:
                  grid-column: span 2
                extra_styles: |
                  li {
                    list-style: square;
                  }
                  li:before {
                    content: "";
                    margin-left: -8px;
                  }

              - type: 'custom:button-card'
                template:
                  - live_tile_card
                  - live_tile_with_long_state
                  - live_tile_with_last_changed_label
                  - live_tile_with_percent_bar
                variables:
                  percent: '[[[ return entity.attributes.battery_level ]]]'
                entity: vacuum.peanut_hamper_s7
                name: Peanut Hamper
                state:
                  - value: docked
                    color: 'off'
                  - value: cleaning
                    color: 'rgb(var(--rgb-primary-color),.33)'
                  - value: error
                    color: 'rgba(var(--rgb-primary-color))'
                  - value: idle
                    color: 'rgba(var(--rgb-primary-color))'
                  - value: returning
                    color: 'rgb(var(--rgb-primary-color),.33)'
                  - operator: default
                    color: 'var(--primary-color)'
                state_display: >-
                  [[[ 
                    if (entity.state == "error") { return entity.attributes.error }
                    if (states['binary_sensor.roborock_vacuum_a15_water_shortage'].state == "on") { return 'Water shortage' }
                    if (states['binary_sensor.roborock_vacuum_a15_water_box_attached'].state == "off") { return 'Bin not present' }
                  ]]]
                styles:
                  state:
                    - text-transform: capitalize
                  grid:
                    - background: |
                        [[[
                          if ((entity.state == "error") || (states['binary_sensor.roborock_vacuum_a15_water_shortage'].state == "on") || (states['binary_sensor.roborock_vacuum_a15_water_box_attached'].state == "off")) {
                            return 'var(--accent-color)'
                          } else {
                            return `linear-gradient(to bottom, var(--accent-color), var(--accent-color)) bottom left / ${variables.percent}% 4px no-repeat,
                              linear-gradient(to bottom, var(--ha-card-background), var(--ha-card-background)) top left / ${variables.percent}% 100% no-repeat, 
                              linear-gradient(to bottom, var(--ha-card-background), var(--ha-card-background))`
                          }
                        ]]]

              - type: 'custom:swipe-card'
                parameters:
                  <<: *summary-live-tile-swipe-card-parameters
                  autoplay:
                    delay: 15000
                style: &summary-live-tile-swipe-card-style-wide |
                  ha-card {aspect-ratio: 2; min-height: 112px !important; height: auto !important;}
                  button-card {aspect-ratio: 2; min-height: 112px !important; height: auto !important;}
                view_layout:
                  grid-column: span 2
                  show:
                    mediaquery: '(max-width: 799.99px)'
                cards:

                  - &maintenance-plant-tile
                    type: 'custom:button-card'
                    template:
                      - live_tile_card
                      - live_tile_with_long_state
                      - plant_status
                    entity: plant.kitchen_garden_basil
                    name: Basil
                    variables:
                      plant: basil
                      aspect_ratio: 2

                  - <<: *maintenance-plant-tile
                    entity: plant.kitchen_garden_cilantro
                    name: Cilantro
                    variables:
                      plant: cilantro
                      aspect_ratio: 2

                  - <<: *maintenance-plant-tile
                    entity: plant.living_room_garden_jade_plant
                    name: Jade
                    variables:
                      plant: jade
                      aspect_ratio: 2

                  - <<: *maintenance-plant-tile
                    entity: plant.living_room_garden_lavender_tree
                    name: Lavender
                    variables:
                      plant: lavender
                      aspect_ratio: 2

                  - <<: *maintenance-plant-tile
                    entity: plant.bathroom_garden_zamia
                    name: Zamia
                    variables:
                      plant: zamia
                      aspect_ratio: 2

              - type: 'custom:swipe-card'
                parameters:
                  <<: *summary-live-tile-swipe-card-parameters
                  autoplay:
                    delay: 15000
                style: *summary-live-tile-swipe-card-style
                view_layout:
                  show:
                    mediaquery: '(min-width: 800px)'
                cards:

                  - <<: *maintenance-plant-tile
                    entity: plant.kitchen_garden_basil
                    name: Basil
                    variables:
                      plant: basil
                      aspect_ratio: 1

                  - <<: *maintenance-plant-tile
                    entity: plant.kitchen_garden_cilantro
                    name: Cilantro
                    variables:
                      plant: cilantro
                      aspect_ratio: 1

                  - <<: *maintenance-plant-tile
                    entity: plant.living_room_garden_jade_plant
                    name: Jade
                    variables:
                      plant: jade
                      aspect_ratio: 1

                  - <<: *maintenance-plant-tile
                    entity: plant.living_room_garden_lavender_tree
                    name: Lavender
                    variables:
                      plant: lavender
                      aspect_ratio: 1

                  - <<: *maintenance-plant-tile
                    entity: plant.bathroom_garden_zamia
                    name: Zamia
                    variables:
                      plant: zamia
                      aspect_ratio: 1


      # Begin Masonry Layout here.

      - type: 'custom:layout-card'
        layout_type: 'custom:grid-layout'
        layout:
          grid-template-areas: '". mc ."'
          grid-template-columns: 0 auto 0
          margin: -1px
          mediaquery:
            '(max-width: 511.99px)':
                grid-template-columns: 16px auto 16px
        view_layout:
          grid-column: 1/-1
        cards:

          - type: 'custom:layout-card'
            layout_type: 'custom:horizontal-layout'
            layout:
              width: 256
              max_width: 512
              max_cols: 5
              card_margin: 0 16px
              margin: 0 -16px
            view_layout:
              grid-area: mc
            cards:

              # [Column] Network (Repeat)

              - type: 'custom:layout-card'
                layout_type: 'custom:grid-layout'
                layout: !include ../shared/snippets/layout-live-tile.yaml
                view_layout:
                  show:
                    mediaquery: '(min-width: 800px) and (max-width: 1127.99px)'
                cards: *summary-column-emvironment-cards


              # [Column] Maintenance (Repeat) / Devices (Repeat)

              - type: 'custom:layout-card'
                layout_type: 'custom:grid-layout'
                layout:
                  margin: 0
                view_layout:
                  show:
                    mediaquery: '(max-width: 1439.99px)'
                cards: *summary-column-network-maintenance-cards


              # [Column] Light (Repeat) / Me / Devices

              - type: 'custom:layout-card'
                layout_type: 'custom:grid-layout'
                layout:
                  margin: 0
                cards:

                  - type: 'custom:layout-card'
                    layout_type: 'custom:grid-layout'
                    layout: !include ../shared/snippets/layout-live-tile.yaml
                    view_layout:
                      show:
                        mediaquery: '(min-width: 800px) and (max-width: 1127.99px)'
                    cards: *summary-column-lights-cards

                  - type: 'custom:layout-card'
                    layout_type: 'custom:grid-layout'
                    layout: !include ../shared/snippets/layout-live-tile.yaml
                    cards:

                      - type: 'custom:button-card'
                        template: header_card
                        variables:
                          name: ME
                          label: More
                          link: /ui-dashboard/me
                        view_layout:
                          grid-column: 1/-1

                      - type: 'custom:button-card'
                        template: live_tile
                        entity: sensor.anniversary_cake_day
                        state_display: >-
                          [[[ return
                          states["sensor.anniversary_days_on_earth"].state ]]]
                        name: >-
                          [[[ return "Cake Day in " +
                          states["sensor.anniversary_cake_day"].state + " Days" ]]]
                        label: >-
                          [[[ return "Week " +
                          -states["sensor.anniversary_days_on_earth"].attributes.weeks_remaining
                          ]]]
                        icon: 'mdi:cake-variant'
                        view_layout:
                          grid-column: span 2
                        variables:
                          aspect_ratio: 2/1
                        styles:
                          card:
                            - background-image: |
                                [[[
                                  var diff = entity.state
                                  if (diff > 120) { return '' }
                                  var opacity = 1 - (diff / 120)
                                  return 'linear-gradient( rgba(var(--rgb-primary-color),' + opacity + '), rgba(var(--rgb-primary-color),' + opacity + '))'
                                ]]]

                      - type: 'custom:button-card'
                        template:
                          - live_tile_with_graph
                          - live_tile_with_state_unit
                        entity: sensor.withings_sleep_score_madelena
                        name: Sleep Score
                        variables:
                          aggregate_func: last
                          hours_to_show: 168
                          points_per_hour: .04166
                          group_by: date
                          graph: bar
                          lower_bound: 0
                          upper_bound: 100
                          bar_spacing: 50

                      - type: 'custom:button-card'
                        template:
                          - live_tile_with_graph
                          - live_tile_with_state_unit
                        entity: sensor.mastodon_madelena_mastodon_online
                        name: Mastodon
                        icon: 'mdi:twitter'
                        variables:
                          hours_to_show: 168
                          points_per_hour: .25


                  # [Column] Devices

                  - type: 'custom:layout-card'
                    layout_type: 'custom:grid-layout'
                    layout: !include ../shared/snippets/layout-live-tile.yaml
                    view_layout:
                      show:
                        mediaquery: '(min-width: 1440px)'
                    cards: &summary-column-devices-cards

                      - type: 'custom:button-card'
                        template: header_card
                        variables:
                          name: DEVICES
                          label: '[[[ return "All " + states["sensor.valhalla_router_connected_devices"].state + " Devices" ]]]'
                          link: /ui-machines
                        view_layout:
                          grid-column: 1/-1

                      - type: 'custom:state-switch'
                        entity: binary_sensor.octoprint_printing
                        default: "off"
                        states:
                          "on":
                            type: 'custom:button-card'
                            template:
                              - live_tile_card
                              - live_tile_with_accent_percent_bar
                            entity: sensor.octoprint_job_percentage
                            name: Genesis
                            state_display: |
                              [[[
                                return Math.round(states['sensor.octoprint_job_percentage'].state * 10)/10 + '<span style="font-size: var(--h6-font-size); font-weight: 600; opacity: .66;"> %</span>'
                              ]]]
                            label: |
                              [[[
                                return 'Finishing ' + moment(states['sensor.octoprint_estimated_finish_time'].state).fromNow()
                              ]]]
                            tap_action:
                              action: navigate
                              navigation_path: genesis
                          "off":
                            type: 'custom:button-card'
                            template:
                              - live_tile_card
                              - live_tile_with_long_state
                              - live_tile_with_last_changed_label
                            entity: sensor.octoprint_current_state
                            name: Genesis
                            state:
                              - value: Operational
                                color: 'rgba(var(--rgb-primary-color),.33)'
                            tap_action:
                              action: navigate
                              navigation_path: genesis

                      - type: 'custom:swipe-card'
                        parameters:
                          <<: *summary-live-tile-swipe-card-parameters
                          autoplay:
                            delay: 15000
                        style: *summary-live-tile-swipe-card-style
                        cards:

                          - type: 'custom:button-card'
                            template:
                              - live_tile_with_graph
                              - live_tile_with_state_unit
                              - live_tile_with_graph_threshold
                            entity: sensor.dorothy_intel_core_i5_750_load_cpu_total
                            name: Illinoise
                            icon: 'mdi:cpu-64-bit'
                            variables:
                              lower_bound: 0
                              upper_bound: 100
                              line_color_lower_bound: 0
                              line_color_upper_bound: 50
                              hours_to_show: 1
                              points_per_hour: 60
                              aggregate_func: max
                            tap_action:
                              action: navigate
                              navigation_path: illinoise

                          - type: 'custom:button-card'
                            template:
                              - live_tile_card
                              - live_tile_with_long_state
                              - live_tile_with_detailed_label
                            entity: sensor.dorothy_crashplan
                            name: Crashplan
                            show_label: true
                            label: |
                              [[[
                                return `<h6>Reporting Period</h6>
                                  <p>${entity.attributes.reporting_period.replace(/, 20\d\d/g, "")}</p>
                                  <h6>Files</h6>
                                  <p>${entity.attributes.difference_files} (${entity.attributes.difference_size})
                                `
                              ]]]
                            tap_action:
                              action: navigate
                              navigation_path: illinoise

                          - type: 'custom:button-card'
                            template:
                              - live_tile_card
                              - live_tile_with_long_state
                            entity: sensor.dorothy_syncback_collections
                            name: SyncBackSE
                            show_label: true
                            label: |
                              [[[
                                const folders = ['collections', 'personal', 'projects', 'portfolio', 'practices']
                                var result = ''
                                var differences = []
                                folders.forEach(folder => {
                                  if (states["sensor.dorothy_syncback_" + folder].state != "success") { result = states["sensor.dorothy_syncback_" + folder].state }
                                  if (states["sensor.dorothy_syncback_" + folder].attributes.difference != "No differences were found." ) { differences.push(states["sensor.dorothy_syncback_" + folder].attributes.difference.slice(0, -1) + " in " + folder[0].toUpperCase() + folder.slice(1) + ". ") }
                                })
                                return differences.join("").slice(0, -2) + (differences != [] ? " " : "") + moment(states["sensor.dorothy_syncback_practices"].attributes.profile_end_time).fromNow()
                              ]]]
                            tap_action:
                              action: navigate
                              navigation_path: illinoise

                      - type: 'custom:swipe-card'
                        parameters:
                          <<: *summary-live-tile-swipe-card-parameters
                          autoplay:
                            delay: 15000
                        style: *summary-live-tile-swipe-card-style
                        cards:

                          - type: 'custom:button-card'
                            template:
                              - live_tile_with_graph
                              - live_tile_with_state_unit
                              - live_tile_with_graph_threshold
                            entity: sensor.unison_processor_use
                            name: Unison
                            variables:
                              lower_bound: 0
                              upper_bound: 100
                              line_color_lower_bound: 0
                              line_color_upper_bound: 50
                              hours_to_show: 1
                              points_per_hour: 60
                            tap_action:
                              action: navigate
                              navigation_path: unison

                          # - type: 'custom:button-card'
                          #   template:
                          #     - live_tile_with_graph
                          #     - live_tile_with_state_unit
                          #     - live_tile_with_graph_threshold
                          #   entity: sensor.disk_use_percent
                          #   name: Disk Use
                          #   variables:
                          #     lower_bound: 0
                          #     upper_bound: 100
                          #     line_color_lower_bound: 0
                          #     line_color_upper_bound: 75
                          #     hours_to_show: 48
                          #     points_per_hour: .5
                          #   tap_action:
                          #     action: navigate
                          #     navigation_path: unison

                          # - type: 'custom:button-card'
                          #   template:
                          #     - live_tile_with_graph
                          #     - live_tile_with_state_unit
                          #     - live_tile_with_graph_threshold
                          #   entity: sensor.valhalla_ups_load
                          #   variables:
                          #     lower_bound: 0
                          #     upper_bound: 100
                          #     line_color_lower_bound: 0
                          #     line_color_upper_bound: 20
                          #     hours_to_show: 1
                          #     points_per_hour: 30
                          #   tap_action:
                          #     action: navigate
                          #     navigation_path: unison

                          - type: 'custom:button-card'
                            template:
                              - live_tile_card
                              - live_tile_with_long_state
                            entity: sensor.backup_state
                            name: HA Backup
                            show_label: true
                            label: '[[[ return moment(entity.attributes.last_backup).fromNow() ]]]'
                            tap_action:
                              action: navigate
                              navigation_path: unison

                      - type: 'custom:swipe-card'
                        parameters:
                          <<: *summary-live-tile-swipe-card-parameters
                          autoplay:
                            delay: 15000
                        style: *summary-live-tile-swipe-card-style
                        cards:

                          - type: 'custom:button-card'
                            template:
                              - live_tile
                            entity: sensor.plex_dorothy
                            name: Plex Users Watching
                            state_display: '[[[ return entity.state ]]]'
                            state:
                              - value: '0'
                                styles:
                                  card:
                                    - background-color: var(--ha-card-background)
                                  state:
                                    - color: var(--primary-text-color)
                                  name:
                                    - color: var(--primary-text-color)
                                  label:
                                    - color: var(--primary-text-color)
                                    - opacity: 0.67
                              - operator: default
                                styles:
                                  card:
                                    - background-color: var(--primary-color)
                                  state:
                                    - color: var(--primary-text-color)
                                  name:
                                    - color: var(--primary-text-color)
                                  label:
                                    - color: var(--primary-text-color)
                                    - opacity: 0.67

                          - type: 'custom:button-card'
                            template:
                              - live_tile_with_graph
                              - live_tile_with_state_unit
                            entity: sensor.nzbget_speed



              # [Column] Weather / Devices (Repeat)

              - type: 'custom:layout-card'
                layout_type: 'custom:grid-layout'
                layout:
                  margin: 0
                cards:


                  # [Column] Weather

                  - type: 'custom:layout-card'
                    layout_type: 'custom:grid-layout'
                    layout: !include ../shared/snippets/layout-live-tile.yaml
                    cards:
                      - type: 'custom:button-card'
                        template: header_card
                        variables:
                          name: WEATHER
                          label: More
                          link: /ui-dashboard/weather
                        view_layout:
                          grid-column: 1/-1

                      - type: 'custom:button-card'
                        template:
                          - live_tile
                          - weather_variables
                          - weather_current_temperature
                        entity: weather.valhalla_hourly

                      - type: 'custom:button-card'
                        template:
                          - live_tile
                          - weather_precipitation
                        entity: weather.valhalla_2

                      - &summary-weather-aqi
                        type: 'custom:button-card'
                        template:
                          - live_tile
                          - waqi_scale
                          - weather_waqi
                        entity: sensor.waqi_newyork_air_quality_index
                        view_layout:
                          show:
                            mediaquery: '(min-width: 1128px), (max-width: 799.99px)'

                      - &summary-weather-pollen
                        type: 'custom:swipe-card'
                        parameters:
                          <<: *summary-live-tile-swipe-card-parameters
                          autoplay:
                            delay: 15000
                        style: *summary-live-tile-swipe-card-style
                        view_layout:
                          show:
                            mediaquery: '(min-width: 1128px), (max-width: 799.99px)'
                        cards:

                          - &summary-weather-pollen-tile
                            type: 'custom:button-card'
                            template:
                              - live_tile
                              - weather_pollen
                            entity: sensor.allergy_index_forecasted_average

                          - &summary-weather-pollen-details
                            type: 'custom:button-card'
                            template:
                              - live_tile_card
                              - live_tile_with_longer_state
                              - weather_pollen
                            entity: sensor.allergy_index_forecasted_average
                            name: Pollen
                            show_state: false
                            label: '[[[ return entity.attributes.outlook ]]]'
                            styles:
                              label:
                                - padding-top: 8px

                      - <<: *summary-weather-pollen
                        view_layout:
                          show:
                            mediaquery: '(min-width: 800px) and (max-width: 1127.99px)'
                        cards:
                          - *summary-weather-aqi
                          - *summary-weather-pollen-tile
                          - *summary-weather-pollen-details

                      - type: 'custom:button-card'
                        template:
                          - live_tile
                          - weather_uv
                        entity: sensor.valhalla_uv_index

                      - type: 'custom:button-card'
                        template:
                          - live_tile_with_unit
                          - weather_wind
                        entity: sensor.valhalla_wind

                      - type: 'custom:auto-entities'
                        filter:
                          template: |
                            {% for alert in range(0,states('sensor.nws_alert_rss_feed')|int) -%}
                              {{
                                { 'entity': 'sensor.nws_alert_rss_feed',
                                  'type': 'custom:button-card',
                                  'template': ['live_tile_card', 'live_tile_with_long_state', 'nws_alerts'],
                                  'variables': {
                                    'slide': alert
                                  },
                                  'tap_action': {
                                    'action': 'navigate',
                                    'navigation_path': 'sensor.nws_alert_rss_feed'
                                  },
                                }
                              }},
                            {%- endfor %}
                        show_empty: false
                        card:
                          type: 'custom:swipe-card'
                          parameters:
                            <<: *summary-live-tile-swipe-card-parameters
                            autoplay:
                              delay: 5000
                            loop: true
                          card_mod:
                            style: *summary-live-tile-swipe-card-style
                        card_param: cards
                        view_layout:
                          show:
                            mediaquery: "(max-width: 1127.99px)"

                      - type: 'custom:auto-entities'
                        filter:
                          template: |
                            {% for alert in range(0,states('sensor.nws_alert_rss_feed')|int) -%}
                              {{
                                { 'entity': 'sensor.nws_alert_rss_feed',
                                  'type': 'custom:button-card',
                                  'template': ['live_tile_card', 'live_tile_with_long_state', 'nws_alerts'],
                                  'variables': {
                                    'slide': alert,
                                    'aspect_ratio': 2
                                  },
                                  'tap_action': {
                                    'action': 'navigate',
                                    'navigation_path': 'sensor.nws_alert_rss_feed'
                                  },
                                }
                              }},
                            {%- endfor %} 
                        show_empty: false
                        card:
                          type: 'custom:swipe-card'
                          parameters:
                            <<: *summary-live-tile-swipe-card-parameters
                            autoplay:
                              delay: 5000
                            loop: true
                          card_mod:
                            style: *summary-live-tile-swipe-card-style-wide
                        card_param: cards
                        view_layout:
                          grid-column: span 2
                          show:
                            mediaquery: "(min-width: 1128px)"


                  # [Column] Devices (Repeat)

                  - type: 'custom:layout-card'
                    layout_type: 'custom:grid-layout'
                    layout: !include ../shared/snippets/layout-live-tile.yaml
                    view_layout:
                      show:
                        mediaquery: '(max-width: 1439.99px)'
                    cards: *summary-column-devices-cards



              # [Column] Neighborhood

              - type: 'custom:layout-card'
                layout_type: 'custom:grid-layout'
                layout: !include ../shared/snippets/layout-live-tile.yaml
                cards:

                  - type: 'custom:button-card'
                    template: header_card
                    variables:
                      name: NEIGHBORHOOD
                      label: More
                      link: /ui-dashboard/neighborhood
                    view_layout:
                      grid-column: 1/-1

                  - type: 'custom:swipe-card'
                    parameters: *summary-live-tile-swipe-card-parameters
                    style: *summary-live-tile-swipe-card-style-wide
                    view_layout:
                      grid-column: span 2
                    
                    cards:

                      - type: 'custom:button-card'
                        variables:
                          aspect_ratio: 2
                        template:
                          - live_tile_card
                          - live_tile_with_long_state
                          - subway_service_status
                          - subway_service_status_background
                        entity: sensor.mta_subway_l_service_status
                        name: L Train Manhattan Bound
                        icon: 'mdi:train'
                        tap_action:
                          action: navigate
                          navigation_path: transit

                      - type: 'custom:button-card'
                        variables:
                          aspect_ratio: 2
                          direction: south
                        template:
                          - live_tile_card
                          - live_tile_with_long_state
                          - subway_service_status
                          - subway_service_status_background
                        entity: sensor.mta_subway_l_service_status
                        name: L Train Canarsie Bound
                        icon: 'mdi:train'
                        tap_action:
                          action: navigate
                          navigation_path: transit

                  - type: 'custom:swipe-card'
                    parameters:
                      <<: *summary-live-tile-swipe-card-parameters
                      autoplay:
                        delay: 15000
                    style: *summary-live-tile-swipe-card-style-wide
                    view_layout:
                      grid-column: 1/3
                      grid-row: 3/4

                    cards:

                      - &summary-card-notify-nyc
                        type: 'custom:button-card'
                        variables:
                          aspect_ratio: 2/1
                          slide: 0
                        template:
                          - live_tile_card
                          - live_tile_with_long_state
                        name: >-
                          [[[ return "Notify NYC - " + moment(entity.attributes.entries[variables.slide].published).fromNow()
                          ]]]
                        entity: sensor.notify_nyc
                        color: var(--ha-card-background)
                        state_display: >-
                          [[[ return
                          entity.attributes.entries[variables.slide].title.replace("Notify NYC
                          - ", "") ]]]
                        label: >-
                          [[[ return
                          entity.attributes.entries[variables.slide].summary.replace(/Notification
                          issued .*/g, "").replace(/For more information, .*/g,
                          "").replace(/To view this message in.*/g, "") ]]]
                        styles:
                          card:
                            - color: |
                                [[[
                                  var diff = (new Date() - new Date(entity.attributes.entries[variables.slide].published)) / 1000
                                  if (diff > 14472) { return "var(--primary-text-color)" } else { return "var(--accent-text-color)" }
                                ]]]
                            - background-image: |
                                [[[
                                  var diff = (new Date() - new Date(entity.attributes.entries[variables.slide].published)) / 1000
                                  var opacity = 1 - (diff / 21600)
                                  if (diff > 21600) { return '' }
                                  return 'linear-gradient( to top, rgba(var(--rgb-primary-color),' + opacity + ') 0%, rgba(var(--rgb-primary-color),' + opacity + ') 100%)'
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: sensor.notify_nyc

                      # This is so fucking clever I have to pat myself in the back here.
                      - <<: *summary-card-notify-nyc
                        variables:
                          aspect_ratio: 2/1
                          slide: 1

                      - <<: *summary-card-notify-nyc
                        variables:
                          aspect_ratio: 2/1
                          slide: 2

                      - <<: *summary-card-notify-nyc
                        variables:
                          aspect_ratio: 2/1
                          slide: 3

                      - <<: *summary-card-notify-nyc
                        variables:
                          aspect_ratio: 2/1
                          slide: 4

                  # Force fix for the height of the swipe card tile above.
                  - type: 'custom:button-card'
                    template: live_tile
                    styles:
                      card:
                        - background: none
                    view_layout:
                      grid-column: 1/1
                      grid-row: 3/4

                  - type: 'custom:button-card'
                    template:
                      - live_tile_card
                      - live_tile_with_long_state
                      - live_tile_with_last_changed_label
                      - live_tile_with_map
                    entity: device_tracker.findmy_654ea8e4e01644dfb5d5ddf61c5df7dd
                    name: Car
                    icon: mdi:car
                    color: 'on'
                    show_label: true
                    variables:
                      zoom_level: 14

                  - type: 'custom:button-card'
                    template:
                      - live_tile_card
                      - live_tile_with_long_state
                    entity: sensor.nyc_311_alternate_side_parking_0d
                    icon: mdi:car
                    name: |
                      [[[
                        if ((parseInt(moment().format("H")) >= 18) || (parseInt(moment(entity.last_changed).format("YYYYMMDD")) < parseInt(moment().format("YYYYMMDD")))) {
                          return 'Parking Tomorrow'
                        }
                        return 'Parking Today'
                      ]]]
                    state_display: |
                      [[[
                        if ((parseInt(moment().format("H")) >= 18) || (parseInt(moment(entity.last_changed).format("YYYYMMDD")) < parseInt(moment().format("YYYYMMDD")))) {
                          return states['sensor.nyc_311_alternate_side_parking_1d'].state
                        }
                        return entity.state
                      ]]]
                    label: |
                      [[[
                        if ((parseInt(moment().format("H")) >= 18) || (parseInt(moment(entity.last_changed).format("YYYYMMDD")) < parseInt(moment().format("YYYYMMDD")))) {
                          return states['sensor.nyc_311_alternate_side_parking_1d'].attributes.details
                        }
                        return entity.attributes.details
                      ]]]
                    state:
                      - value: 'In Effect'
                        color: var(--ha-card-background)
                        styles:
                          card:
                            - background: var(--ha-card-background)
                            - color: var(--disabled-text-color)
                      - operator: 'default'
                        color: var(--primary-color)

                  - &summary-card-traffic
                    type: 'custom:button-card'
                    template:
                      - live_tile_with_camera
                    name: Traffic
                    entity: camera.bing_maps_traffic
                    show_state: false
                    variables:
                      picture: '[[[ return entity.attributes.entity_picture ]]]'
                    view_layout:
                      grid-column: span 2
                      grid-row: span 2
                      show:
                        mediaquery: '(max-width: 799.99px)'

                  - type: 'custom:button-card'
                    template:
                      - live_tile_with_graph
                      - live_tile_with_state_unit
                    entity: sensor.gasbuddy_average_gas_price
                    name: Avg Gas Price
                    variables:
                      state_display: '[[[ return Math.round(entity.state * 100) / 100 ]]]'
                      hours_to_show: 168
                      points_per_hour: .25
                      
                  - type: 'custom:button-card'
                    template:
                      - live_tile_with_graph
                      - live_tile_with_state_unit
                      - live_tile_with_graph_threshold
                    variables:
                      line_color_lower_bound: 0
                      line_color_upper_bound: 25
                      line_color_upper_bound_max: 40
                    entity: sensor.waze_travel_time
                    name: Driving Time

                  # - type: 'custom:button-card'
                  #   template:
                  #     - live_tile
                  #     - weather_pollen
                  #   entity: sensor.cold_flu_forecasted_average
                  #   name: Flu

                  - <<: *summary-card-traffic
                    view_layout:
                      grid-column: span 2
                      grid-row: span 2
                      show:
                        mediaquery: '(min-width: 800px)'



              # [Column] Astrometrics

              - type: 'custom:layout-card'
                layout_type: 'custom:grid-layout'
                layout: !include ../shared/snippets/layout-live-tile.yaml
                cards:

                  - type: 'custom:button-card'
                    template: header_card
                    variables:
                      name: ASTROMETRICS
                      label: More
                      link: /ui-dashboard/astrometrics
                    view_layout:
                      grid-column: 1/-1

                  - type: 'custom:button-card'
                    template:
                      - sun_card

                  # - type: 'custom:button-card'
                  #   template: live_tile
                  #   entity: sensor.moon
                  #   name: '[[[ return entity.state.replace("_", " ") ]]]'
                  #   show_state: false
                  #   state:
                  #     - value: new_moon
                  #       styles:
                  #         card:
                  #           - background: var(--primary-color)
                  #     - value: full_moon
                  #       styles:
                  #         card:
                  #           - background: var(--primary-color)

                  - type: 'custom:button-card'
                    template:
                      - live_tile_card
                      - live_tile_with_longer_state
                    entity: sensor.moon
                    name: Astronomy
                    state_display: |
                      [[[
                        return states['sensor.ics_1'].attributes.description
                      ]]]
                    show_label: true
                    label: |
                      [[[
                        if (moment(states['sensor.ics_1'].attributes.start).isBefore()) {
                          return 'Ends ' + moment(states['sensor.ics_1'].attributes.end).fromNow()
                        } else {
                          return 'Starts ' + moment(states['sensor.ics_1'].attributes.start).fromNow()
                        }
                      ]]]

                    state:
                      - value: new_moon
                        styles:
                          card:
                            - background: var(--primary-color)
                            - color: var(--primary-text-color)
                      - value: full_moon
                        styles:
                          card:
                            - background: var(--primary-color)
                            - color: var(--primary-text-color)
                    styles:
                      icon:
                        - color: var(--primary-text-color)
                      state:
                        - -webkit-line-clamp: 3

                  - type: 'custom:button-card'
                    template:
                      - live_tile_with_graph
                      - live_tile_with_state_unit
                    entity: sensor.noaa_space_weather_solar_wind_speed
                    name: Solar Wind Speed
                    icon: mdi:weather-windy

                  - type: 'custom:button-card'
                    template:
                      - live_tile_card
                      - live_tile_with_longer_state
                      - live_tile_with_map
                    variables:
                      zoom_level: 3
                    entity: sensor.iss
                    name: ISS
                    icon: mdi:space-station
                    state_display: |
                      [[[
                        if (states['sensor.iss_nearby_place'].state != 'unknown' && states['sensor.iss_nearby_place'].state != '') {
                          return states['sensor.iss_nearby_place'].state
                        } else {
                          return states['sensor.iss_nearby_ocean'].state
                        }
                      ]]]
                    show_label: true
                    label: |
                      [[[
                        var m = moment(states["sensor.iss_visible_pass_1"].state)
                        if (m.isValid()) {
                          if (moment().isBefore(states["sensor.iss_visible_pass_1"].state)) {
                            return "Overhead " + m.fromNow()
                          } else {
                            return "Overhead " + m.fromNow()
                          }
                        }
                      ]]]
                    # label: '[[[ return "Crew of " + states["sensor.iss_2"].state ]]]'
                    color: 'on'
                    styles:
                      state:
                        - white-space: nowrap
                      label:
                        - white-space: nowrap
                      custom_fields:
                        map_overlay1:
                          - mix-blend-mode: screen
                          - background-color: |
                              [[[
                                const startUTC = moment(states["sensor.iss_visible_pass_1"].attributes.startutc, "X")
                                const maxUTC = moment(states["sensor.iss_visible_pass_1"].attributes.maxutc, "X")
                                const endUTC = moment(states["sensor.iss_visible_pass_1"].attributes.endutc, "X")
                                if (moment().isBetween(startUTC, endUTC)) {
                                  return "rgba(var(--rgb-accent-color),.8)"
                                } else {
                                  if (moment().isBefore(startUTC)) {
                                    const diff = states["sensor.iss_visible_pass_1"].attributes.startutc - parseInt(moment().format("X"))
                                    if (diff < 600) {
                                      const opacity = ((1 - diff / 600) * .8)
                                      return "rgba(var(--rgb-accent-color)," + opacity + ")"
                                    }
                                  }
                                  return "transparent"
                                }
                              ]]]
                    tap_action:
                      action: navigate
                      navigation_path: binary_sensor.iss

                  # - type: map
                  #   entities:
                  #     - entity: binary_sensor.iss
                  #   default_zoom: 0.25
                  #   hours_to_show: 12
                  #   card_mod:
                  #     style:
                  #       .: |
                  #         ha-icon-button { display: none; }
                  #       ha-map$: |
                  #         .leaflet-control-container { display: none; }
                  #       ha-map$ha-entity-marker$: >
                  #         .marker { width: 8px !important; height: 8px !important; margin-top:
                  #         20px; margin-left: 20px; border: 0 !important; background-color: var(--primary-color) !important; color: transparent !important; }

                  - type: 'custom:swipe-card'
                    parameters:
                      <<: *summary-live-tile-swipe-card-parameters
                      autoplay:
                        delay: 15000
                    style: *summary-live-tile-swipe-card-style-wide
                    cards:

                      - &summary-card-noaa-space-weather
                        type: 'custom:button-card'
                        variables:
                          aspect_ratio: 2/1
                          slide: 0
                        template:
                          - live_tile_card
                          - live_tile_with_long_state
                        entity: sensor.noaa_space_weather_alert_1
                        name: '[[[ return entity.state + " &bull; " + entity.attributes.summary.split(": ")[0] + " &bull; " + moment(entity.attributes.date).subtract(5, "h").fromNow() ]]]'
                        state_display: '[[[ return entity.attributes.summary.split(": ")[1] ]]]'
                        label: '[[[ return entity.attributes.potential_impacts ]]]'
                        color: var(--ha-card-background)
                        icon: mdi:alert-octagram
                        styles:
                          card:
                            - color: |
                                [[[
                                  var diff = (new Date() - new Date(entity.attributes.date)) / 1000
                                  if (diff > 57888) { return "var(--primary-text-color)" } else { return "var(--accent-text-color)" }
                                ]]]
                            - background-image: |
                                [[[
                                  var diff = (new Date() - new Date(entity.attributes.date)) / 1000
                                  var opacity = 1 - (diff / 86400)
                                  if (diff > 86400) { return '' }
                                  return 'linear-gradient( to top, rgba(var(--rgb-primary-color),' + opacity + ') 0%, rgba(var(--rgb-primary-color),' + opacity + ') 100%)'
                                ]]]

                      - <<: *summary-card-noaa-space-weather
                        entity: sensor.noaa_space_weather_alert_2
                        variables:
                          aspect_ratio: 2/1

                      - <<: *summary-card-noaa-space-weather
                        entity: sensor.noaa_space_weather_alert_3
                        variables:
                          aspect_ratio: 2/1

                      - <<: *summary-card-noaa-space-weather
                        entity: sensor.noaa_space_weather_alert_4
                        variables:
                          aspect_ratio: 2/1

                      - <<: *summary-card-noaa-space-weather
                        entity: sensor.noaa_space_weather_alert_5
                        variables:
                          aspect_ratio: 2/1

                    view_layout:
                      grid-column: span 2



              # [Column] Media

              - type: 'custom:layout-card'
                layout_type: 'custom:grid-layout'
                layout:
                  grid-template-columns: >-
                    repeat(auto-fill, [col-start] minmax(112px, 1fr)
                    [col-end])
                  grid-auto-flow: row dense
                  margin: -1
                cards:

                  - type: 'custom:button-card'
                    template: header_card
                    variables:
                      name: MEDIA
                      label: More
                      link: /ui-machines/media
                    view_layout:
                      grid-column: 1/-1

                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 1fr 1fr
                      grid-template-rows: 1fr
                      margin: 0
                    view_layout:
                      grid-column: 1/3
                      grid-row: 2/3
                    cards:
                        
                      - type: 'custom:auto-entities'
                        filter:
                          include:
                            - domain: media_player
                              state: playing
                              options:
                                type: 'custom:button-card'
                                template: live_tile_media_player
                                entity: this.entity_id
                            - domain: media_player
                              state: paused
                              options:
                                type: 'custom:button-card'
                                template: live_tile_media_player
                                entity: this.entity_id
                        show_empty: false
                        card:
                          type: 'custom:swipe-card'
                          parameters:
                            <<: *summary-live-tile-swipe-card-parameters
                            autoplay:
                              delay: 5000
                        card_mod:
                          style: *summary-live-tile-swipe-card-style-wide
                        card_param: cards
                        sort:
                          method: last_updated 
                          reverse: true
                        view_layout:
                          grid-column: 1/3
                          grid-row: 1/2

                      # Force fix for the height of the swipe card tile above. Even harder than the previous one.
                      - type: 'custom:button-card'
                        template: live_tile
                        triggers_update: all
                        styles:
                          card:
                            - display: >-
                                [[[
                                  var mediaPlaying = Object.keys(states).filter(e => e.includes("media") && (states[e].state == "playing")).length
                                  var mediaPaused = Object.keys(states).filter(e => e.includes("media") && (states[e].state == "paused")).length
                                  if (mediaPlaying + mediaPaused > 0) { return 'block' } else { return 'none' }
                                ]]]
                            - background: none
                        view_layout:
                          grid-column: 1/2
                          grid-row: 1/2

                  - type: 'custom:button-card'
                    template:
                      - live_tile_with_graph
                      - live_tile_with_state_unit
                    entity: sensor.my_last_fm_play_count
                    name: Last.fm
                    icon: 'mdi:music'
                    variables:
                      hours_to_show: 168
                      points_per_hour: .25
                      lower_bound: ~100000

                  - type: 'custom:button-card'
                    template:
                      - live_tile_card
                      - live_tile_with_longer_state
                      - plex_variables
                    name: New to Plex
                    icon: 'mdi:plex'
                    entity: sensor.dorothy_library_flacs
                    state_display: '[[[ return variables.plex_last_added_item ]]]'
                    label: '[[[ return variables.plex_last_added_time ]]]'
                    styles:
                      card:
                        - background: var(--ha-card-background)
                        - color: var(--primary-text-color)
                      state:
                        - display: '-webkit-box'
                        - '-webkit-line-clamp': 3
                        - '-webkit-box-orient': vertical
                    tap_action:
                      action: navigate
                      navigation_path: plex

                  - type: 'custom:swipe-card'
                    parameters:
                      <<: *summary-live-tile-swipe-card-parameters
                      autoplay:
                        delay: 60000
                    style: *summary-live-tile-swipe-card-style-wide
                    view_layout:
                      grid-column: span 2
                    cards:

                      - type: 'custom:button-card'
                        template:
                          - live_tile_card
                          - live_tile_with_long_state
                        entity: sensor.last_fm_top_artists
                        icon: 'mdi:album'
                        name: >-
                          [[[ return
                          states["sensor.last_fm_top_artists_json"].attributes.artist[0].playcount
                          + " plays" ]]]
                        label: >
                          [[[ return
                          states["sensor.last_fm_top_artists"].attributes.artist_2
                          + "<br/>" + 
                          states["sensor.last_fm_top_artists"].attributes.artist_3
                          + "<br/>" + 
                          states["sensor.last_fm_top_artists"].attributes.artist_4
                          + "<br/>" + 
                          states["sensor.last_fm_top_artists"].attributes.artist_5
                          ]]]
                        variables:
                          aspect_ratio: 2/1
                        styles:
                          card:
                            - color: var(--primary-text-color)
                            - background-size: cover
                            - background-image: >
                                [[[ return "linear-gradient(to bottom, rgba(var(--rgb-primary-background-color), .5), rgba(var(--rgb-primary-background-color), .5)), url('" + 
                                  states["sensor.last_fm_top_artist_photo"].state + "')" ]]]

                      - type: 'custom:button-card'
                        template:
                          - live_tile_card
                          - live_tile_with_long_state
                        entity: sensor.last_fm_top_albums
                        icon: 'mdi:album'
                        name: >-
                          [[[ return
                          states["sensor.last_fm_top_albums_json"].attributes.album[0].playcount
                          + " plays" ]]]
                        label: >
                          [[[ return
                          states["sensor.last_fm_top_albums"].attributes.album_2
                          + "<br/>" + 
                          states["sensor.last_fm_top_albums"].attributes.album_3
                          + "<br/>" + 
                          states["sensor.last_fm_top_albums"].attributes.album_4
                          + "<br/>" + 
                          states["sensor.last_fm_top_albums"].attributes.album_5
                          ]]]
                        variables:
                          aspect_ratio: 2/1
                        styles:
                          card:
                            - color: var(--primary-text-color)
                            - background-size: cover
                            - background-image: >
                                [[[ return "linear-gradient(to bottom, rgba(var(--rgb-primary-background-color), .5), rgba(var(--rgb-primary-background-color), .5)), url('" + 
                                  states["sensor.last_fm_top_albums"].attributes.album_1_image + "')" ]]]

                      - type: 'custom:button-card'
                        template:
                          - live_tile_card
                          - live_tile_with_long_state
                        entity: sensor.last_fm_top_tracks
                        icon: 'mdi:album'
                        name: >-
                          [[[ return
                          states["sensor.last_fm_top_tracks_json"].attributes.track[0].playcount
                          + " plays" ]]]
                        label: >
                          [[[ return
                          states["sensor.last_fm_top_tracks"].attributes.track_2
                          + "<br/>" + 
                          states["sensor.last_fm_top_tracks"].attributes.track_3
                          + "<br/>" + 
                          states["sensor.last_fm_top_tracks"].attributes.track_4
                          + "<br/>" + 
                          states["sensor.last_fm_top_tracks"].attributes.track_5
                          ]]]
                        variables:
                          aspect_ratio: 2/1
                        styles:
                          card:
                            - color: var(--primary-text-color)
                            - background: var(--ha-card-background)
